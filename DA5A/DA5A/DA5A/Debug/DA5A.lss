
DA5A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a4  00800100  00000fac  00001040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  008002a4  008002a4  000011e4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001240  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001280  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b85  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c4d  00000000  00000000  00002f1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b8f  00000000  00000000  00003b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  000046fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062f  00000000  00000000  0000498c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000097f  00000000  00000000  00004fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  0000593a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ea       	ldi	r30, 0xAC	; 172
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3a       	cpi	r26, 0xA4	; 164
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a4 ea       	ldi	r26, 0xA4	; 164
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 3e       	cpi	r26, 0xE3	; 227
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 3f 01 	call	0x27e	; 0x27e <main>
  9e:	0c 94 d4 07 	jmp	0xfa8	; 0xfa8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
		}
	}
}

ISR(INT0_vect)	//	Interrupt on IRQ pin
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
	message_received = true;
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <message_received>
}
  b8:	8f 91       	pop	r24
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <adc_init>:

// INIT ADC
void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
  c4:	84 e4       	ldi	r24, 0x44	; 68
  c6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|    // AVcc - external cap at AREF
	(0<<ADLAR)|    // ADC Left Adjust Result
	(1<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC4 (PC4 PIN27)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|    // ADC ENable
  ca:	85 e8       	ldi	r24, 0x85	; 133
  cc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  d0:	08 95       	ret

000000d2 <read_adc>:
}
// READ ADC PINS
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
  d2:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <adc_temp+0x1>
  d6:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <adc_temp>
  da:	24 e0       	ldi	r18, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
  dc:	ea e7       	ldi	r30, 0x7A	; 122
  de:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
  e0:	a8 e7       	ldi	r26, 0x78	; 120
  e2:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
  e4:	80 81       	ld	r24, Z
  e6:	80 64       	ori	r24, 0x40	; 64
  e8:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
  ea:	80 81       	ld	r24, Z
  ec:	86 fd       	sbrc	r24, 6
  ee:	fd cf       	rjmp	.-6      	; 0xea <read_adc+0x18>
		adc_temp+= ADC;
  f0:	4d 91       	ld	r20, X+
  f2:	5c 91       	ld	r21, X
  f4:	11 97       	sbiw	r26, 0x01	; 1
  f6:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <adc_temp>
  fa:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <adc_temp+0x1>
  fe:	84 0f       	add	r24, r20
 100:	95 1f       	adc	r25, r21
 102:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <adc_temp+0x1>
 106:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10a:	3f ef       	ldi	r19, 0xFF	; 255
 10c:	80 e7       	ldi	r24, 0x70	; 112
 10e:	92 e0       	ldi	r25, 0x02	; 2
 110:	31 50       	subi	r19, 0x01	; 1
 112:	80 40       	sbci	r24, 0x00	; 0
 114:	90 40       	sbci	r25, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <read_adc+0x3e>
 118:	00 c0       	rjmp	.+0      	; 0x11a <read_adc+0x48>
 11a:	00 00       	nop
 11c:	21 50       	subi	r18, 0x01	; 1
// READ ADC PINS
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
 11e:	11 f7       	brne	.-60     	; 0xe4 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 4;  // Average a few samples
 120:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <adc_temp>
 124:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <adc_temp+0x1>
 128:	96 95       	lsr	r25
 12a:	87 95       	ror	r24
 12c:	96 95       	lsr	r25
 12e:	87 95       	ror	r24
 130:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <adc_temp+0x1>
 134:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <adc_temp>
 138:	08 95       	ret

0000013a <print_config>:
}

void print_config(void)
{
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	1f 92       	push	r1
 140:	cd b7       	in	r28, 0x3d	; 61
 142:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
 144:	86 e2       	ldi	r24, 0x26	; 38
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
	printf("-------------------------------------------\n");
 14c:	84 e5       	ldi	r24, 0x54	; 84
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
	nrf24_read(CONFIG,&data,1);
 154:	41 e0       	ldi	r20, 0x01	; 1
 156:	50 e0       	ldi	r21, 0x00	; 0
 158:	be 01       	movw	r22, r28
 15a:	6f 5f       	subi	r22, 0xFF	; 255
 15c:	7f 4f       	sbci	r23, 0xFF	; 255
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("CONFIG		0x%02X\n",data);
 164:	89 81       	ldd	r24, Y+1	; 0x01
 166:	1f 92       	push	r1
 168:	8f 93       	push	r24
 16a:	80 e8       	ldi	r24, 0x80	; 128
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	9f 93       	push	r25
 170:	8f 93       	push	r24
 172:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(EN_AA,&data,1);
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	be 01       	movw	r22, r28
 17c:	6f 5f       	subi	r22, 0xFF	; 255
 17e:	7f 4f       	sbci	r23, 0xFF	; 255
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("EN_AA			0x%02X\n",data);
 186:	89 81       	ldd	r24, Y+1	; 0x01
 188:	1f 92       	push	r1
 18a:	8f 93       	push	r24
 18c:	80 e9       	ldi	r24, 0x90	; 144
 18e:	91 e0       	ldi	r25, 0x01	; 1
 190:	9f 93       	push	r25
 192:	8f 93       	push	r24
 194:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(EN_RXADDR,&data,1);
 198:	41 e0       	ldi	r20, 0x01	; 1
 19a:	50 e0       	ldi	r21, 0x00	; 0
 19c:	be 01       	movw	r22, r28
 19e:	6f 5f       	subi	r22, 0xFF	; 255
 1a0:	7f 4f       	sbci	r23, 0xFF	; 255
 1a2:	82 e0       	ldi	r24, 0x02	; 2
 1a4:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("EN_RXADDR		0x%02X\n",data);
 1a8:	89 81       	ldd	r24, Y+1	; 0x01
 1aa:	1f 92       	push	r1
 1ac:	8f 93       	push	r24
 1ae:	80 ea       	ldi	r24, 0xA0	; 160
 1b0:	91 e0       	ldi	r25, 0x01	; 1
 1b2:	9f 93       	push	r25
 1b4:	8f 93       	push	r24
 1b6:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(SETUP_RETR,&data,1);
 1ba:	41 e0       	ldi	r20, 0x01	; 1
 1bc:	50 e0       	ldi	r21, 0x00	; 0
 1be:	be 01       	movw	r22, r28
 1c0:	6f 5f       	subi	r22, 0xFF	; 255
 1c2:	7f 4f       	sbci	r23, 0xFF	; 255
 1c4:	84 e0       	ldi	r24, 0x04	; 4
 1c6:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("SETUP_RETR		0x%02X\n",data);
 1ca:	89 81       	ldd	r24, Y+1	; 0x01
 1cc:	1f 92       	push	r1
 1ce:	8f 93       	push	r24
 1d0:	83 eb       	ldi	r24, 0xB3	; 179
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	9f 93       	push	r25
 1d6:	8f 93       	push	r24
 1d8:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(RF_CH,&data,1);
 1dc:	41 e0       	ldi	r20, 0x01	; 1
 1de:	50 e0       	ldi	r21, 0x00	; 0
 1e0:	be 01       	movw	r22, r28
 1e2:	6f 5f       	subi	r22, 0xFF	; 255
 1e4:	7f 4f       	sbci	r23, 0xFF	; 255
 1e6:	85 e0       	ldi	r24, 0x05	; 5
 1e8:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("RF_CH			0x%02X\n",data);
 1ec:	89 81       	ldd	r24, Y+1	; 0x01
 1ee:	1f 92       	push	r1
 1f0:	8f 93       	push	r24
 1f2:	87 ec       	ldi	r24, 0xC7	; 199
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	9f 93       	push	r25
 1f8:	8f 93       	push	r24
 1fa:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(RF_SETUP,&data,1);
 1fe:	41 e0       	ldi	r20, 0x01	; 1
 200:	50 e0       	ldi	r21, 0x00	; 0
 202:	be 01       	movw	r22, r28
 204:	6f 5f       	subi	r22, 0xFF	; 255
 206:	7f 4f       	sbci	r23, 0xFF	; 255
 208:	86 e0       	ldi	r24, 0x06	; 6
 20a:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("RF_SETUP		0x%02X\n",data);
 20e:	89 81       	ldd	r24, Y+1	; 0x01
 210:	1f 92       	push	r1
 212:	8f 93       	push	r24
 214:	87 ed       	ldi	r24, 0xD7	; 215
 216:	91 e0       	ldi	r25, 0x01	; 1
 218:	9f 93       	push	r25
 21a:	8f 93       	push	r24
 21c:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(STATUS,&data,1);
 220:	41 e0       	ldi	r20, 0x01	; 1
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	be 01       	movw	r22, r28
 226:	6f 5f       	subi	r22, 0xFF	; 255
 228:	7f 4f       	sbci	r23, 0xFF	; 255
 22a:	87 e0       	ldi	r24, 0x07	; 7
 22c:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("STATUS		0x%02X\n",data);
 230:	89 81       	ldd	r24, Y+1	; 0x01
 232:	1f 92       	push	r1
 234:	8f 93       	push	r24
 236:	89 ee       	ldi	r24, 0xE9	; 233
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	9f 93       	push	r25
 23c:	8f 93       	push	r24
 23e:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(FEATURE,&data,1);
 242:	41 e0       	ldi	r20, 0x01	; 1
 244:	50 e0       	ldi	r21, 0x00	; 0
 246:	be 01       	movw	r22, r28
 248:	6f 5f       	subi	r22, 0xFF	; 255
 24a:	7f 4f       	sbci	r23, 0xFF	; 255
 24c:	8d e1       	ldi	r24, 0x1D	; 29
 24e:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	printf("FEATURE		0x%02X\n",data);
 252:	89 81       	ldd	r24, Y+1	; 0x01
 254:	1f 92       	push	r1
 256:	8f 93       	push	r24
 258:	89 ef       	ldi	r24, 0xF9	; 249
 25a:	91 e0       	ldi	r25, 0x01	; 1
 25c:	9f 93       	push	r25
 25e:	8f 93       	push	r24
 260:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	printf("-------------------------------------------\n\n");
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	f8 94       	cli
 268:	de bf       	out	0x3e, r29	; 62
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	cd bf       	out	0x3d, r28	; 61
 26e:	8a e0       	ldi	r24, 0x0A	; 10
 270:	92 e0       	ldi	r25, 0x02	; 2
 272:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
}
 276:	0f 90       	pop	r0
 278:	df 91       	pop	r29
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <main>:

volatile bool message_received = false; //	Used in IRQ ISR
volatile bool status = false;

int main(void)
{
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	a0 97       	sbiw	r28, 0x20	; 32
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
	char tx_message[32];	// Used to declare string
	strcpy(tx_message,"This is the message from Moe");	// Copy this string into the array
 292:	8d e1       	ldi	r24, 0x1D	; 29
 294:	e7 e3       	ldi	r30, 0x37	; 55
 296:	f2 e0       	ldi	r31, 0x02	; 2
 298:	de 01       	movw	r26, r28
 29a:	11 96       	adiw	r26, 0x01	; 1
 29c:	01 90       	ld	r0, Z+
 29e:	0d 92       	st	X+, r0
 2a0:	8a 95       	dec	r24
 2a2:	e1 f7       	brne	.-8      	; 0x29c <main+0x1e>
	
	uart_init();	// Call function to initialize UART
 2a4:	0e 94 68 04 	call	0x8d0	; 0x8d0 <uart_init>
	adc_init();		// Call function to  initialize ADC
 2a8:	0e 94 62 00 	call	0xc4	; 0xc4 <adc_init>

	nrf24_init();	// Call function to initialize NRF24L01+
 2ac:	0e 94 13 02 	call	0x426	; 0x426 <nrf24_init>
	print_config();	// Call function to print configure
 2b0:	0e 94 9d 00 	call	0x13a	; 0x13a <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
 2b4:	0e 94 38 03 	call	0x670	; 0x670 <nrf24_start_listening>
	
	while (1)
	{
		read_adc();
		adc_temp = (adc_temp*500)/1023 + 20;
 2b8:	0f 2e       	mov	r0, r31
 2ba:	f4 ef       	ldi	r31, 0xF4	; 244
 2bc:	af 2e       	mov	r10, r31
 2be:	bb 24       	eor	r11, r11
 2c0:	b3 94       	inc	r11
 2c2:	f0 2d       	mov	r31, r0
 2c4:	0f 2e       	mov	r0, r31
 2c6:	cc 24       	eor	r12, r12
 2c8:	ca 94       	dec	r12
 2ca:	f3 e0       	ldi	r31, 0x03	; 3
 2cc:	df 2e       	mov	r13, r31
 2ce:	f0 2d       	mov	r31, r0
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp); 
 2d0:	0f 2e       	mov	r0, r31
 2d2:	f4 e5       	ldi	r31, 0x54	; 84
 2d4:	ef 2e       	mov	r14, r31
 2d6:	f2 e0       	ldi	r31, 0x02	; 2
 2d8:	ff 2e       	mov	r15, r31
 2da:	f0 2d       	mov	r31, r0
 2dc:	06 ec       	ldi	r16, 0xC6	; 198
 2de:	12 e0       	ldi	r17, 0x02	; 2
		nrf24_send_message(tx_message);
		_delay_ms(1500);
		if (message_received)
		{
			message_received = false;
			printf("Message received: %s\n",nrf24_read_message());	// When message received, print the message
 2e0:	0f 2e       	mov	r0, r31
 2e2:	fa e5       	ldi	r31, 0x5A	; 90
 2e4:	8f 2e       	mov	r8, r31
 2e6:	f2 e0       	ldi	r31, 0x02	; 2
 2e8:	9f 2e       	mov	r9, r31
 2ea:	f0 2d       	mov	r31, r0
	
	while (1)
	{
		read_adc();
		adc_temp = (adc_temp*500)/1023 + 20;
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp); 
 2ec:	50 2e       	mov	r5, r16
 2ee:	61 2e       	mov	r6, r17
 2f0:	0f 2e       	mov	r0, r31
 2f2:	f4 e1       	ldi	r31, 0x14	; 20
 2f4:	7f 2e       	mov	r7, r31
 2f6:	f0 2d       	mov	r31, r0
	//	Start listening to incoming messages
	nrf24_start_listening();
	
	while (1)
	{
		read_adc();
 2f8:	0e 94 69 00 	call	0xd2	; 0xd2 <read_adc>
		adc_temp = (adc_temp*500)/1023 + 20;
 2fc:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <adc_temp>
 300:	30 91 db 02 	lds	r19, 0x02DB	; 0x8002db <adc_temp+0x1>
 304:	2a 9d       	mul	r18, r10
 306:	c0 01       	movw	r24, r0
 308:	2b 9d       	mul	r18, r11
 30a:	90 0d       	add	r25, r0
 30c:	3a 9d       	mul	r19, r10
 30e:	90 0d       	add	r25, r0
 310:	11 24       	eor	r1, r1
 312:	b6 01       	movw	r22, r12
 314:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__udivmodhi4>
 318:	6c 5e       	subi	r22, 0xEC	; 236
 31a:	7f 4f       	sbci	r23, 0xFF	; 255
 31c:	70 93 db 02 	sts	0x02DB, r23	; 0x8002db <adc_temp+0x1>
 320:	60 93 da 02 	sts	0x02DA, r22	; 0x8002da <adc_temp>
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp); 
 324:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <adc_temp>
 328:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <adc_temp+0x1>
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	ff 92       	push	r15
 332:	ef 92       	push	r14
 334:	1f 92       	push	r1
 336:	7f 92       	push	r7
 338:	1f 93       	push	r17
 33a:	0f 93       	push	r16
 33c:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <snprintf>
		strcpy(tx_message,outs);	
 340:	65 2d       	mov	r22, r5
 342:	76 2d       	mov	r23, r6
 344:	ce 01       	movw	r24, r28
 346:	01 96       	adiw	r24, 0x01	; 1
 348:	0e 94 8f 04 	call	0x91e	; 0x91e <strcpy>
		nrf24_send_message(tx_message);
 34c:	ce 01       	movw	r24, r28
 34e:	01 96       	adiw	r24, 0x01	; 1
 350:	0e 94 43 03 	call	0x686	; 0x686 <nrf24_send_message>
 354:	2f ef       	ldi	r18, 0xFF	; 255
 356:	3d e3       	ldi	r19, 0x3D	; 61
 358:	89 e4       	ldi	r24, 0x49	; 73
 35a:	21 50       	subi	r18, 0x01	; 1
 35c:	30 40       	sbci	r19, 0x00	; 0
 35e:	80 40       	sbci	r24, 0x00	; 0
 360:	e1 f7       	brne	.-8      	; 0x35a <main+0xdc>
 362:	00 c0       	rjmp	.+0      	; 0x364 <main+0xe6>
 364:	00 00       	nop
		_delay_ms(1500);
		if (message_received)
 366:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <message_received>
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	f8 94       	cli
 36e:	de bf       	out	0x3e, r29	; 62
 370:	0f be       	out	0x3f, r0	; 63
 372:	cd bf       	out	0x3d, r28	; 61
 374:	88 23       	and	r24, r24
 376:	09 f4       	brne	.+2      	; 0x37a <main+0xfc>
 378:	bf cf       	rjmp	.-130    	; 0x2f8 <main+0x7a>
		{
			message_received = false;
 37a:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <message_received>
			printf("Message received: %s\n",nrf24_read_message());	// When message received, print the message
 37e:	0e 94 00 04 	call	0x800	; 0x800 <nrf24_read_message>
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	9f 92       	push	r9
 388:	8f 92       	push	r8
 38a:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
 38e:	3f ef       	ldi	r19, 0xFF	; 255
 390:	89 e6       	ldi	r24, 0x69	; 105
 392:	98 e1       	ldi	r25, 0x18	; 24
 394:	31 50       	subi	r19, 0x01	; 1
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	90 40       	sbci	r25, 0x00	; 0
 39a:	e1 f7       	brne	.-8      	; 0x394 <main+0x116>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <main+0x120>
 39e:	00 00       	nop
		
			_delay_ms(500);
			status = nrf24_send_message(tx_message);
 3a0:	ce 01       	movw	r24, r28
 3a2:	01 96       	adiw	r24, 0x01	; 1
 3a4:	0e 94 43 03 	call	0x686	; 0x686 <nrf24_send_message>
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	81 11       	cpse	r24, r1
 3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <main+0x13a>
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	90 93 a4 02 	sts	0x02A4, r25	; 0x8002a4 <__data_end>
			if (status == true) printf("Message sent successfully\n");	// When message sent, print this message
 3bc:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <__data_end>
 3c0:	88 23       	and	r24, r24
 3c2:	09 f4       	brne	.+2      	; 0x3c6 <main+0x148>
 3c4:	99 cf       	rjmp	.-206    	; 0x2f8 <main+0x7a>
 3c6:	80 e7       	ldi	r24, 0x70	; 112
 3c8:	92 e0       	ldi	r25, 0x02	; 2
 3ca:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
 3ce:	90 cf       	rjmp	.-224    	; 0x2f0 <main+0x72>

000003d0 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
 3d0:	df 92       	push	r13
 3d2:	ef 92       	push	r14
 3d4:	ff 92       	push	r15
 3d6:	0f 93       	push	r16
 3d8:	1f 93       	push	r17
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	7b 01       	movw	r14, r22
 3e0:	8a 01       	movw	r16, r20
 3e2:	2a 98       	cbi	0x05, 2	; 5
 3e4:	0e 94 47 04 	call	0x88e	; 0x88e <spi_exchange>
 3e8:	d8 2e       	mov	r13, r24
 3ea:	01 15       	cp	r16, r1
 3ec:	11 05       	cpc	r17, r1
 3ee:	51 f0       	breq	.+20     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f0:	e7 01       	movw	r28, r14
 3f2:	0e 0d       	add	r16, r14
 3f4:	1f 1d       	adc	r17, r15
 3f6:	88 81       	ld	r24, Y
 3f8:	0e 94 47 04 	call	0x88e	; 0x88e <spi_exchange>
 3fc:	89 93       	st	Y+, r24
 3fe:	c0 17       	cp	r28, r16
 400:	d1 07       	cpc	r29, r17
 402:	c9 f7       	brne	.-14     	; 0x3f6 <nrf24_send_spi+0x26>
 404:	2a 9a       	sbi	0x05, 2	; 5
 406:	8d 2d       	mov	r24, r13
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	ff 90       	pop	r15
 412:	ef 90       	pop	r14
 414:	df 90       	pop	r13
 416:	08 95       	ret

00000418 <nrf24_write>:
 418:	80 62       	ori	r24, 0x20	; 32
 41a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <nrf24_send_spi>
 41e:	08 95       	ret

00000420 <nrf24_read>:
 420:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <nrf24_send_spi>
 424:	08 95       	ret

00000426 <nrf24_init>:
 426:	0f 93       	push	r16
 428:	1f 93       	push	r17
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	1f 92       	push	r1
 430:	cd b7       	in	r28, 0x3d	; 61
 432:	de b7       	in	r29, 0x3e	; 62
 434:	f8 94       	cli
 436:	e9 e6       	ldi	r30, 0x69	; 105
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	82 60       	ori	r24, 0x02	; 2
 43e:	80 83       	st	Z, r24
 440:	e8 9a       	sbi	0x1d, 0	; 29
 442:	78 94       	sei
 444:	21 9a       	sbi	0x04, 1	; 4
 446:	22 9a       	sbi	0x04, 2	; 4
 448:	2a 9a       	sbi	0x05, 2	; 5
 44a:	29 98       	cbi	0x05, 1	; 5
 44c:	0e 94 38 04 	call	0x870	; 0x870 <spi_master_init>
 450:	2f ef       	ldi	r18, 0xFF	; 255
 452:	81 ee       	ldi	r24, 0xE1	; 225
 454:	94 e0       	ldi	r25, 0x04	; 4
 456:	21 50       	subi	r18, 0x01	; 1
 458:	80 40       	sbci	r24, 0x00	; 0
 45a:	90 40       	sbci	r25, 0x00	; 0
 45c:	e1 f7       	brne	.-8      	; 0x456 <nrf24_init+0x30>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <nrf24_init+0x3a>
 460:	00 00       	nop
 462:	0f e3       	ldi	r16, 0x3F	; 63
 464:	00 93 dc 02 	sts	0x02DC, r16	; 0x8002dc <data>
 468:	41 e0       	ldi	r20, 0x01	; 1
 46a:	50 e0       	ldi	r21, 0x00	; 0
 46c:	6c ed       	ldi	r22, 0xDC	; 220
 46e:	72 e0       	ldi	r23, 0x02	; 2
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 476:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <data>
 47a:	41 e0       	ldi	r20, 0x01	; 1
 47c:	50 e0       	ldi	r21, 0x00	; 0
 47e:	6c ed       	ldi	r22, 0xDC	; 220
 480:	72 e0       	ldi	r23, 0x02	; 2
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 488:	80 ef       	ldi	r24, 0xF0	; 240
 48a:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 48e:	41 e0       	ldi	r20, 0x01	; 1
 490:	50 e0       	ldi	r21, 0x00	; 0
 492:	6c ed       	ldi	r22, 0xDC	; 220
 494:	72 e0       	ldi	r23, 0x02	; 2
 496:	84 e0       	ldi	r24, 0x04	; 4
 498:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 49c:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <data>
 4a0:	41 e0       	ldi	r20, 0x01	; 1
 4a2:	50 e0       	ldi	r21, 0x00	; 0
 4a4:	6c ed       	ldi	r22, 0xDC	; 220
 4a6:	72 e0       	ldi	r23, 0x02	; 2
 4a8:	82 e0       	ldi	r24, 0x02	; 2
 4aa:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 4ae:	84 e7       	ldi	r24, 0x74	; 116
 4b0:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 4b4:	41 e0       	ldi	r20, 0x01	; 1
 4b6:	50 e0       	ldi	r21, 0x00	; 0
 4b8:	6c ed       	ldi	r22, 0xDC	; 220
 4ba:	72 e0       	ldi	r23, 0x02	; 2
 4bc:	85 e0       	ldi	r24, 0x05	; 5
 4be:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 4c2:	8e e0       	ldi	r24, 0x0E	; 14
 4c4:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 4c8:	41 e0       	ldi	r20, 0x01	; 1
 4ca:	50 e0       	ldi	r21, 0x00	; 0
 4cc:	6c ed       	ldi	r22, 0xDC	; 220
 4ce:	72 e0       	ldi	r23, 0x02	; 2
 4d0:	86 e0       	ldi	r24, 0x06	; 6
 4d2:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 4d6:	10 e7       	ldi	r17, 0x70	; 112
 4d8:	10 93 dc 02 	sts	0x02DC, r17	; 0x8002dc <data>
 4dc:	41 e0       	ldi	r20, 0x01	; 1
 4de:	50 e0       	ldi	r21, 0x00	; 0
 4e0:	6c ed       	ldi	r22, 0xDC	; 220
 4e2:	72 e0       	ldi	r23, 0x02	; 2
 4e4:	87 e0       	ldi	r24, 0x07	; 7
 4e6:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 4ea:	00 93 dc 02 	sts	0x02DC, r16	; 0x8002dc <data>
 4ee:	41 e0       	ldi	r20, 0x01	; 1
 4f0:	50 e0       	ldi	r21, 0x00	; 0
 4f2:	6c ed       	ldi	r22, 0xDC	; 220
 4f4:	72 e0       	ldi	r23, 0x02	; 2
 4f6:	8c e1       	ldi	r24, 0x1C	; 28
 4f8:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 4fc:	84 e0       	ldi	r24, 0x04	; 4
 4fe:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 502:	41 e0       	ldi	r20, 0x01	; 1
 504:	50 e0       	ldi	r21, 0x00	; 0
 506:	6c ed       	ldi	r22, 0xDC	; 220
 508:	72 e0       	ldi	r23, 0x02	; 2
 50a:	8d e1       	ldi	r24, 0x1D	; 29
 50c:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 510:	19 83       	std	Y+1, r17	; 0x01
 512:	40 e0       	ldi	r20, 0x00	; 0
 514:	50 e0       	ldi	r21, 0x00	; 0
 516:	60 e0       	ldi	r22, 0x00	; 0
 518:	70 e0       	ldi	r23, 0x00	; 0
 51a:	82 ee       	ldi	r24, 0xE2	; 226
 51c:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 520:	40 e0       	ldi	r20, 0x00	; 0
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	60 e0       	ldi	r22, 0x00	; 0
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	81 ee       	ldi	r24, 0xE1	; 225
 52a:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 52e:	45 e0       	ldi	r20, 0x05	; 5
 530:	50 e0       	ldi	r21, 0x00	; 0
 532:	65 e0       	ldi	r22, 0x05	; 5
 534:	71 e0       	ldi	r23, 0x01	; 1
 536:	8a e0       	ldi	r24, 0x0A	; 10
 538:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 53c:	45 e0       	ldi	r20, 0x05	; 5
 53e:	50 e0       	ldi	r21, 0x00	; 0
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	71 e0       	ldi	r23, 0x01	; 1
 544:	80 e1       	ldi	r24, 0x10	; 16
 546:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 54a:	41 e0       	ldi	r20, 0x01	; 1
 54c:	50 e0       	ldi	r21, 0x00	; 0
 54e:	be 01       	movw	r22, r28
 550:	6f 5f       	subi	r22, 0xFF	; 255
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 55a:	89 81       	ldd	r24, Y+1	; 0x01
 55c:	81 60       	ori	r24, 0x01	; 1
 55e:	89 83       	std	Y+1, r24	; 0x01
 560:	41 e0       	ldi	r20, 0x01	; 1
 562:	50 e0       	ldi	r21, 0x00	; 0
 564:	be 01       	movw	r22, r28
 566:	6f 5f       	subi	r22, 0xFF	; 255
 568:	7f 4f       	sbci	r23, 0xFF	; 255
 56a:	82 e0       	ldi	r24, 0x02	; 2
 56c:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 570:	0f 90       	pop	r0
 572:	df 91       	pop	r29
 574:	cf 91       	pop	r28
 576:	1f 91       	pop	r17
 578:	0f 91       	pop	r16
 57a:	08 95       	ret

0000057c <nrf24_state>:
 57c:	1f 93       	push	r17
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
 582:	1f 92       	push	r1
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
 588:	18 2f       	mov	r17, r24
 58a:	41 e0       	ldi	r20, 0x01	; 1
 58c:	50 e0       	ldi	r21, 0x00	; 0
 58e:	be 01       	movw	r22, r28
 590:	6f 5f       	subi	r22, 0xFF	; 255
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	80 e0       	ldi	r24, 0x00	; 0
 596:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
 59a:	13 30       	cpi	r17, 0x03	; 3
 59c:	71 f1       	breq	.+92     	; 0x5fa <nrf24_state+0x7e>
 59e:	28 f4       	brcc	.+10     	; 0x5aa <nrf24_state+0x2e>
 5a0:	11 30       	cpi	r17, 0x01	; 1
 5a2:	59 f0       	breq	.+22     	; 0x5ba <nrf24_state+0x3e>
 5a4:	12 30       	cpi	r17, 0x02	; 2
 5a6:	e9 f0       	breq	.+58     	; 0x5e2 <nrf24_state+0x66>
 5a8:	5e c0       	rjmp	.+188    	; 0x666 <nrf24_state+0xea>
 5aa:	15 30       	cpi	r17, 0x05	; 5
 5ac:	09 f4       	brne	.+2      	; 0x5b0 <nrf24_state+0x34>
 5ae:	47 c0       	rjmp	.+142    	; 0x63e <nrf24_state+0xc2>
 5b0:	d0 f1       	brcs	.+116    	; 0x626 <nrf24_state+0xaa>
 5b2:	16 30       	cpi	r17, 0x06	; 6
 5b4:	09 f4       	brne	.+2      	; 0x5b8 <nrf24_state+0x3c>
 5b6:	45 c0       	rjmp	.+138    	; 0x642 <nrf24_state+0xc6>
 5b8:	56 c0       	rjmp	.+172    	; 0x666 <nrf24_state+0xea>
 5ba:	89 81       	ldd	r24, Y+1	; 0x01
 5bc:	81 fd       	sbrc	r24, 1
 5be:	53 c0       	rjmp	.+166    	; 0x666 <nrf24_state+0xea>
 5c0:	82 60       	ori	r24, 0x02	; 2
 5c2:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 5c6:	41 e0       	ldi	r20, 0x01	; 1
 5c8:	50 e0       	ldi	r21, 0x00	; 0
 5ca:	6c ed       	ldi	r22, 0xDC	; 220
 5cc:	72 e0       	ldi	r23, 0x02	; 2
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 5d4:	8f e3       	ldi	r24, 0x3F	; 63
 5d6:	9f e1       	ldi	r25, 0x1F	; 31
 5d8:	01 97       	sbiw	r24, 0x01	; 1
 5da:	f1 f7       	brne	.-4      	; 0x5d8 <nrf24_state+0x5c>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <nrf24_state+0x62>
 5de:	00 00       	nop
 5e0:	42 c0       	rjmp	.+132    	; 0x666 <nrf24_state+0xea>
 5e2:	89 81       	ldd	r24, Y+1	; 0x01
 5e4:	8d 7f       	andi	r24, 0xFD	; 253
 5e6:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 5ea:	41 e0       	ldi	r20, 0x01	; 1
 5ec:	50 e0       	ldi	r21, 0x00	; 0
 5ee:	6c ed       	ldi	r22, 0xDC	; 220
 5f0:	72 e0       	ldi	r23, 0x02	; 2
 5f2:	80 e0       	ldi	r24, 0x00	; 0
 5f4:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 5f8:	36 c0       	rjmp	.+108    	; 0x666 <nrf24_state+0xea>
 5fa:	89 81       	ldd	r24, Y+1	; 0x01
 5fc:	81 60       	ori	r24, 0x01	; 1
 5fe:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 602:	41 e0       	ldi	r20, 0x01	; 1
 604:	50 e0       	ldi	r21, 0x00	; 0
 606:	6c ed       	ldi	r22, 0xDC	; 220
 608:	72 e0       	ldi	r23, 0x02	; 2
 60a:	80 e0       	ldi	r24, 0x00	; 0
 60c:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 610:	80 e7       	ldi	r24, 0x70	; 112
 612:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 616:	41 e0       	ldi	r20, 0x01	; 1
 618:	50 e0       	ldi	r21, 0x00	; 0
 61a:	6c ed       	ldi	r22, 0xDC	; 220
 61c:	72 e0       	ldi	r23, 0x02	; 2
 61e:	87 e0       	ldi	r24, 0x07	; 7
 620:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 624:	20 c0       	rjmp	.+64     	; 0x666 <nrf24_state+0xea>
 626:	89 81       	ldd	r24, Y+1	; 0x01
 628:	8e 7f       	andi	r24, 0xFE	; 254
 62a:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 62e:	41 e0       	ldi	r20, 0x01	; 1
 630:	50 e0       	ldi	r21, 0x00	; 0
 632:	6c ed       	ldi	r22, 0xDC	; 220
 634:	72 e0       	ldi	r23, 0x02	; 2
 636:	80 e0       	ldi	r24, 0x00	; 0
 638:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 63c:	14 c0       	rjmp	.+40     	; 0x666 <nrf24_state+0xea>
 63e:	29 98       	cbi	0x05, 1	; 5
 640:	12 c0       	rjmp	.+36     	; 0x666 <nrf24_state+0xea>
 642:	89 81       	ldd	r24, Y+1	; 0x01
 644:	8e 7f       	andi	r24, 0xFE	; 254
 646:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 64a:	41 e0       	ldi	r20, 0x01	; 1
 64c:	50 e0       	ldi	r21, 0x00	; 0
 64e:	6c ed       	ldi	r22, 0xDC	; 220
 650:	72 e0       	ldi	r23, 0x02	; 2
 652:	80 e0       	ldi	r24, 0x00	; 0
 654:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 658:	29 9a       	sbi	0x05, 1	; 5
 65a:	87 e5       	ldi	r24, 0x57	; 87
 65c:	92 e0       	ldi	r25, 0x02	; 2
 65e:	01 97       	sbiw	r24, 0x01	; 1
 660:	f1 f7       	brne	.-4      	; 0x65e <nrf24_state+0xe2>
 662:	00 c0       	rjmp	.+0      	; 0x664 <nrf24_state+0xe8>
 664:	00 00       	nop
 666:	0f 90       	pop	r0
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	08 95       	ret

00000670 <nrf24_start_listening>:
 670:	83 e0       	ldi	r24, 0x03	; 3
 672:	0e 94 be 02 	call	0x57c	; 0x57c <nrf24_state>
 676:	29 9a       	sbi	0x05, 1	; 5
 678:	87 e5       	ldi	r24, 0x57	; 87
 67a:	92 e0       	ldi	r25, 0x02	; 2
 67c:	01 97       	sbiw	r24, 0x01	; 1
 67e:	f1 f7       	brne	.-4      	; 0x67c <nrf24_start_listening+0xc>
 680:	00 c0       	rjmp	.+0      	; 0x682 <nrf24_start_listening+0x12>
 682:	00 00       	nop
 684:	08 95       	ret

00000686 <nrf24_send_message>:
 686:	cf 92       	push	r12
 688:	df 92       	push	r13
 68a:	ef 92       	push	r14
 68c:	ff 92       	push	r15
 68e:	0f 93       	push	r16
 690:	1f 93       	push	r17
 692:	cf 93       	push	r28
 694:	df 93       	push	r29
 696:	cd b7       	in	r28, 0x3d	; 61
 698:	de b7       	in	r29, 0x3e	; 62
 69a:	a0 97       	sbiw	r28, 0x20	; 32
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	f8 94       	cli
 6a0:	de bf       	out	0x3e, r29	; 62
 6a2:	0f be       	out	0x3f, r0	; 63
 6a4:	cd bf       	out	0x3d, r28	; 61
 6a6:	6c 01       	movw	r12, r24
 6a8:	68 94       	set
 6aa:	ff 24       	eor	r15, r15
 6ac:	f5 f8       	bld	r15, 5
 6ae:	ce 01       	movw	r24, r28
 6b0:	01 96       	adiw	r24, 0x01	; 1
 6b2:	fc 01       	movw	r30, r24
 6b4:	2f 2d       	mov	r18, r15
 6b6:	11 92       	st	Z+, r1
 6b8:	2a 95       	dec	r18
 6ba:	e9 f7       	brne	.-6      	; 0x6b6 <nrf24_send_message+0x30>
 6bc:	b6 01       	movw	r22, r12
 6be:	0e 94 8f 04 	call	0x91e	; 0x91e <strcpy>
 6c2:	f6 01       	movw	r30, r12
 6c4:	01 90       	ld	r0, Z+
 6c6:	00 20       	and	r0, r0
 6c8:	e9 f7       	brne	.-6      	; 0x6c4 <nrf24_send_message+0x3e>
 6ca:	31 97       	sbiw	r30, 0x01	; 1
 6cc:	8f 01       	movw	r16, r30
 6ce:	0c 19       	sub	r16, r12
 6d0:	1d 09       	sbc	r17, r13
 6d2:	84 e0       	ldi	r24, 0x04	; 4
 6d4:	0e 94 be 02 	call	0x57c	; 0x57c <nrf24_state>
 6d8:	40 e0       	ldi	r20, 0x00	; 0
 6da:	50 e0       	ldi	r21, 0x00	; 0
 6dc:	60 e0       	ldi	r22, 0x00	; 0
 6de:	70 e0       	ldi	r23, 0x00	; 0
 6e0:	82 ee       	ldi	r24, 0xE2	; 226
 6e2:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 6e6:	40 e0       	ldi	r20, 0x00	; 0
 6e8:	50 e0       	ldi	r21, 0x00	; 0
 6ea:	60 e0       	ldi	r22, 0x00	; 0
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	81 ee       	ldi	r24, 0xE1	; 225
 6f0:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 6f4:	f0 92 dc 02 	sts	0x02DC, r15	; 0x8002dc <data>
 6f8:	41 e0       	ldi	r20, 0x01	; 1
 6fa:	50 e0       	ldi	r21, 0x00	; 0
 6fc:	6c ed       	ldi	r22, 0xDC	; 220
 6fe:	72 e0       	ldi	r23, 0x02	; 2
 700:	87 e0       	ldi	r24, 0x07	; 7
 702:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 706:	41 e0       	ldi	r20, 0x01	; 1
 708:	50 e0       	ldi	r21, 0x00	; 0
 70a:	6c ed       	ldi	r22, 0xDC	; 220
 70c:	72 e0       	ldi	r23, 0x02	; 2
 70e:	80 e0       	ldi	r24, 0x00	; 0
 710:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
 714:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <data>
 718:	80 64       	ori	r24, 0x40	; 64
 71a:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 71e:	41 e0       	ldi	r20, 0x01	; 1
 720:	50 e0       	ldi	r21, 0x00	; 0
 722:	6c ed       	ldi	r22, 0xDC	; 220
 724:	72 e0       	ldi	r23, 0x02	; 2
 726:	80 e0       	ldi	r24, 0x00	; 0
 728:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 72c:	2a 98       	cbi	0x05, 2	; 5
 72e:	80 eb       	ldi	r24, 0xB0	; 176
 730:	0e 94 42 04 	call	0x884	; 0x884 <spi_send>
 734:	ef ef       	ldi	r30, 0xFF	; 255
 736:	e0 0f       	add	r30, r16
 738:	00 23       	and	r16, r16
 73a:	81 f0       	breq	.+32     	; 0x75c <nrf24_send_message+0xd6>
 73c:	86 01       	movw	r16, r12
 73e:	ee 2e       	mov	r14, r30
 740:	f1 2c       	mov	r15, r1
 742:	f7 01       	movw	r30, r14
 744:	31 96       	adiw	r30, 0x01	; 1
 746:	76 01       	movw	r14, r12
 748:	ee 0e       	add	r14, r30
 74a:	ff 1e       	adc	r15, r31
 74c:	f8 01       	movw	r30, r16
 74e:	81 91       	ld	r24, Z+
 750:	8f 01       	movw	r16, r30
 752:	0e 94 42 04 	call	0x884	; 0x884 <spi_send>
 756:	0e 15       	cp	r16, r14
 758:	1f 05       	cpc	r17, r15
 75a:	c1 f7       	brne	.-16     	; 0x74c <nrf24_send_message+0xc6>
 75c:	80 e0       	ldi	r24, 0x00	; 0
 75e:	0e 94 42 04 	call	0x884	; 0x884 <spi_send>
 762:	2a 9a       	sbi	0x05, 2	; 5
 764:	29 9a       	sbi	0x05, 1	; 5
 766:	f0 e5       	ldi	r31, 0x50	; 80
 768:	fa 95       	dec	r31
 76a:	f1 f7       	brne	.-4      	; 0x768 <nrf24_send_message+0xe2>
 76c:	29 98       	cbi	0x05, 1	; 5
 76e:	41 e0       	ldi	r20, 0x01	; 1
 770:	50 e0       	ldi	r21, 0x00	; 0
 772:	6c ed       	ldi	r22, 0xDC	; 220
 774:	72 e0       	ldi	r23, 0x02	; 2
 776:	87 e0       	ldi	r24, 0x07	; 7
 778:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
 77c:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <data>
 780:	85 fd       	sbrc	r24, 5
 782:	0b c0       	rjmp	.+22     	; 0x79a <nrf24_send_message+0x114>
 784:	41 e0       	ldi	r20, 0x01	; 1
 786:	50 e0       	ldi	r21, 0x00	; 0
 788:	6c ed       	ldi	r22, 0xDC	; 220
 78a:	72 e0       	ldi	r23, 0x02	; 2
 78c:	87 e0       	ldi	r24, 0x07	; 7
 78e:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
 792:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <data>
 796:	85 ff       	sbrs	r24, 5
 798:	f5 cf       	rjmp	.-22     	; 0x784 <nrf24_send_message+0xfe>
 79a:	ce 01       	movw	r24, r28
 79c:	01 96       	adiw	r24, 0x01	; 1
 79e:	9f 93       	push	r25
 7a0:	8f 93       	push	r24
 7a2:	8a e8       	ldi	r24, 0x8A	; 138
 7a4:	92 e0       	ldi	r25, 0x02	; 2
 7a6:	9f 93       	push	r25
 7a8:	8f 93       	push	r24
 7aa:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
 7ae:	41 e0       	ldi	r20, 0x01	; 1
 7b0:	50 e0       	ldi	r21, 0x00	; 0
 7b2:	6c ed       	ldi	r22, 0xDC	; 220
 7b4:	72 e0       	ldi	r23, 0x02	; 2
 7b6:	80 e0       	ldi	r24, 0x00	; 0
 7b8:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
 7bc:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <data>
 7c0:	8f 7b       	andi	r24, 0xBF	; 191
 7c2:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
 7c6:	41 e0       	ldi	r20, 0x01	; 1
 7c8:	50 e0       	ldi	r21, 0x00	; 0
 7ca:	6c ed       	ldi	r22, 0xDC	; 220
 7cc:	72 e0       	ldi	r23, 0x02	; 2
 7ce:	80 e0       	ldi	r24, 0x00	; 0
 7d0:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
 7d4:	0e 94 38 03 	call	0x670	; 0x670 <nrf24_start_listening>
 7d8:	0f 90       	pop	r0
 7da:	0f 90       	pop	r0
 7dc:	0f 90       	pop	r0
 7de:	0f 90       	pop	r0
 7e0:	81 e0       	ldi	r24, 0x01	; 1
 7e2:	a0 96       	adiw	r28, 0x20	; 32
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	ff 90       	pop	r15
 7f8:	ef 90       	pop	r14
 7fa:	df 90       	pop	r13
 7fc:	cf 90       	pop	r12
 7fe:	08 95       	ret

00000800 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 800:	80 e2       	ldi	r24, 0x20	; 32
 802:	e6 ea       	ldi	r30, 0xA6	; 166
 804:	f2 e0       	ldi	r31, 0x02	; 2
 806:	df 01       	movw	r26, r30
 808:	1d 92       	st	X+, r1
 80a:	8a 95       	dec	r24
 80c:	e9 f7       	brne	.-6      	; 0x808 <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 80e:	41 e0       	ldi	r20, 0x01	; 1
 810:	50 e0       	ldi	r21, 0x00	; 0
 812:	6c ed       	ldi	r22, 0xDC	; 220
 814:	72 e0       	ldi	r23, 0x02	; 2
 816:	80 e6       	ldi	r24, 0x60	; 96
 818:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 81c:	40 91 dc 02 	lds	r20, 0x02DC	; 0x8002dc <data>
 820:	44 23       	and	r20, r20
 822:	41 f0       	breq	.+16     	; 0x834 <nrf24_read_message+0x34>
 824:	50 e0       	ldi	r21, 0x00	; 0
 826:	4f 5f       	subi	r20, 0xFF	; 255
 828:	5f 4f       	sbci	r21, 0xFF	; 255
 82a:	66 ea       	ldi	r22, 0xA6	; 166
 82c:	72 e0       	ldi	r23, 0x02	; 2
 82e:	81 e6       	ldi	r24, 0x61	; 97
 830:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 834:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <rx_message.2167>
 838:	88 23       	and	r24, r24
 83a:	69 f0       	breq	.+26     	; 0x856 <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 83c:	80 e4       	ldi	r24, 0x40	; 64
 83e:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
		nrf24_write(STATUS,&data,1);
 842:	41 e0       	ldi	r20, 0x01	; 1
 844:	50 e0       	ldi	r21, 0x00	; 0
 846:	6c ed       	ldi	r22, 0xDC	; 220
 848:	72 e0       	ldi	r23, 0x02	; 2
 84a:	87 e0       	ldi	r24, 0x07	; 7
 84c:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
		
		return rx_message;
 850:	86 ea       	ldi	r24, 0xA6	; 166
 852:	92 e0       	ldi	r25, 0x02	; 2
 854:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 856:	80 e4       	ldi	r24, 0x40	; 64
 858:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <data>
	nrf24_write(STATUS,&data,1);
 85c:	41 e0       	ldi	r20, 0x01	; 1
 85e:	50 e0       	ldi	r21, 0x00	; 0
 860:	6c ed       	ldi	r22, 0xDC	; 220
 862:	72 e0       	ldi	r23, 0x02	; 2
 864:	87 e0       	ldi	r24, 0x07	; 7
 866:	0e 94 0c 02 	call	0x418	; 0x418 <nrf24_write>
	
	return "failed";
 86a:	8c e9       	ldi	r24, 0x9C	; 156
 86c:	92 e0       	ldi	r25, 0x02	; 2
}
 86e:	08 95       	ret

00000870 <spi_master_init>:
	loop_until_bit_is_set(SPSR, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
 870:	24 98       	cbi	0x04, 4	; 4
 872:	84 b1       	in	r24, 0x04	; 4
 874:	88 62       	ori	r24, 0x28	; 40
 876:	84 b9       	out	0x04, r24	; 4
 878:	80 e5       	ldi	r24, 0x50	; 80
 87a:	8c bd       	out	0x2c, r24	; 44
 87c:	8d b5       	in	r24, 0x2d	; 45
 87e:	81 60       	ori	r24, 0x01	; 1
 880:	8d bd       	out	0x2d, r24	; 45
 882:	08 95       	ret

00000884 <spi_send>:
 884:	8e bd       	out	0x2e, r24	; 46
 886:	0d b4       	in	r0, 0x2d	; 45
 888:	07 fe       	sbrs	r0, 7
 88a:	fd cf       	rjmp	.-6      	; 0x886 <spi_send+0x2>
 88c:	08 95       	ret

0000088e <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR = send_data;
 88e:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
 890:	0d b4       	in	r0, 0x2d	; 45
 892:	07 fe       	sbrs	r0, 7
 894:	fd cf       	rjmp	.-6      	; 0x890 <spi_exchange+0x2>
	return SPDR;
 896:	8e b5       	in	r24, 0x2e	; 46
}
 898:	08 95       	ret

0000089a <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
 89a:	cf 93       	push	r28
 89c:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 89e:	8a 30       	cpi	r24, 0x0A	; 10
 8a0:	19 f4       	brne	.+6      	; 0x8a8 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 8a2:	8d e0       	ldi	r24, 0x0D	; 13
 8a4:	0e 94 4d 04 	call	0x89a	; 0x89a <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 8a8:	e0 ec       	ldi	r30, 0xC0	; 192
 8aa:	f0 e0       	ldi	r31, 0x00	; 0
 8ac:	80 81       	ld	r24, Z
 8ae:	85 ff       	sbrs	r24, 5
 8b0:	fd cf       	rjmp	.-6      	; 0x8ac <uart_putchar+0x12>
	UDR0 = c;
 8b2:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 8b6:	80 e0       	ldi	r24, 0x00	; 0
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	cf 91       	pop	r28
 8bc:	08 95       	ret

000008be <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 8be:	e0 ec       	ldi	r30, 0xC0	; 192
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	80 81       	ld	r24, Z
 8c4:	88 23       	and	r24, r24
 8c6:	ec f7       	brge	.-6      	; 0x8c2 <uart_getchar+0x4>
	return UDR0;
 8c8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 8cc:	90 e0       	ldi	r25, 0x00	; 0
 8ce:	08 95       	ret

000008d0 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
 8d0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
 8d4:	87 e6       	ldi	r24, 0x67	; 103
 8d6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 8da:	88 e1       	ldi	r24, 0x18	; 24
 8dc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout;
 8e0:	ed ed       	ldi	r30, 0xDD	; 221
 8e2:	f2 e0       	ldi	r31, 0x02	; 2
 8e4:	88 e1       	ldi	r24, 0x18	; 24
 8e6:	91 e0       	ldi	r25, 0x01	; 1
 8e8:	93 83       	std	Z+3, r25	; 0x03
 8ea:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
 8ec:	8a e0       	ldi	r24, 0x0A	; 10
 8ee:	91 e0       	ldi	r25, 0x01	; 1
 8f0:	91 83       	std	Z+1, r25	; 0x01
 8f2:	80 83       	st	Z, r24
 8f4:	08 95       	ret

000008f6 <__udivmodhi4>:
 8f6:	aa 1b       	sub	r26, r26
 8f8:	bb 1b       	sub	r27, r27
 8fa:	51 e1       	ldi	r21, 0x11	; 17
 8fc:	07 c0       	rjmp	.+14     	; 0x90c <__udivmodhi4_ep>

000008fe <__udivmodhi4_loop>:
 8fe:	aa 1f       	adc	r26, r26
 900:	bb 1f       	adc	r27, r27
 902:	a6 17       	cp	r26, r22
 904:	b7 07       	cpc	r27, r23
 906:	10 f0       	brcs	.+4      	; 0x90c <__udivmodhi4_ep>
 908:	a6 1b       	sub	r26, r22
 90a:	b7 0b       	sbc	r27, r23

0000090c <__udivmodhi4_ep>:
 90c:	88 1f       	adc	r24, r24
 90e:	99 1f       	adc	r25, r25
 910:	5a 95       	dec	r21
 912:	a9 f7       	brne	.-22     	; 0x8fe <__udivmodhi4_loop>
 914:	80 95       	com	r24
 916:	90 95       	com	r25
 918:	bc 01       	movw	r22, r24
 91a:	cd 01       	movw	r24, r26
 91c:	08 95       	ret

0000091e <strcpy>:
 91e:	fb 01       	movw	r30, r22
 920:	dc 01       	movw	r26, r24
 922:	01 90       	ld	r0, Z+
 924:	0d 92       	st	X+, r0
 926:	00 20       	and	r0, r0
 928:	e1 f7       	brne	.-8      	; 0x922 <strcpy+0x4>
 92a:	08 95       	ret

0000092c <printf>:
 92c:	a0 e0       	ldi	r26, 0x00	; 0
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	ec e9       	ldi	r30, 0x9C	; 156
 932:	f4 e0       	ldi	r31, 0x04	; 4
 934:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__prologue_saves__+0x20>
 938:	ae 01       	movw	r20, r28
 93a:	4b 5f       	subi	r20, 0xFB	; 251
 93c:	5f 4f       	sbci	r21, 0xFF	; 255
 93e:	fa 01       	movw	r30, r20
 940:	61 91       	ld	r22, Z+
 942:	71 91       	ld	r23, Z+
 944:	af 01       	movw	r20, r30
 946:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <__iob+0x2>
 94a:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <__iob+0x3>
 94e:	0e 94 0c 05 	call	0xa18	; 0xa18 <vfprintf>
 952:	e2 e0       	ldi	r30, 0x02	; 2
 954:	0c 94 c9 07 	jmp	0xf92	; 0xf92 <__epilogue_restores__+0x20>

00000958 <puts>:
 958:	0f 93       	push	r16
 95a:	1f 93       	push	r17
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	e0 91 df 02 	lds	r30, 0x02DF	; 0x8002df <__iob+0x2>
 964:	f0 91 e0 02 	lds	r31, 0x02E0	; 0x8002e0 <__iob+0x3>
 968:	23 81       	ldd	r18, Z+3	; 0x03
 96a:	21 ff       	sbrs	r18, 1
 96c:	1b c0       	rjmp	.+54     	; 0x9a4 <puts+0x4c>
 96e:	8c 01       	movw	r16, r24
 970:	d0 e0       	ldi	r29, 0x00	; 0
 972:	c0 e0       	ldi	r28, 0x00	; 0
 974:	f8 01       	movw	r30, r16
 976:	81 91       	ld	r24, Z+
 978:	8f 01       	movw	r16, r30
 97a:	60 91 df 02 	lds	r22, 0x02DF	; 0x8002df <__iob+0x2>
 97e:	70 91 e0 02 	lds	r23, 0x02E0	; 0x8002e0 <__iob+0x3>
 982:	db 01       	movw	r26, r22
 984:	18 96       	adiw	r26, 0x08	; 8
 986:	ed 91       	ld	r30, X+
 988:	fc 91       	ld	r31, X
 98a:	19 97       	sbiw	r26, 0x09	; 9
 98c:	88 23       	and	r24, r24
 98e:	31 f0       	breq	.+12     	; 0x99c <puts+0x44>
 990:	09 95       	icall
 992:	89 2b       	or	r24, r25
 994:	79 f3       	breq	.-34     	; 0x974 <puts+0x1c>
 996:	df ef       	ldi	r29, 0xFF	; 255
 998:	cf ef       	ldi	r28, 0xFF	; 255
 99a:	ec cf       	rjmp	.-40     	; 0x974 <puts+0x1c>
 99c:	8a e0       	ldi	r24, 0x0A	; 10
 99e:	09 95       	icall
 9a0:	89 2b       	or	r24, r25
 9a2:	19 f0       	breq	.+6      	; 0x9aa <puts+0x52>
 9a4:	8f ef       	ldi	r24, 0xFF	; 255
 9a6:	9f ef       	ldi	r25, 0xFF	; 255
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <puts+0x56>
 9aa:	8d 2f       	mov	r24, r29
 9ac:	9c 2f       	mov	r25, r28
 9ae:	df 91       	pop	r29
 9b0:	cf 91       	pop	r28
 9b2:	1f 91       	pop	r17
 9b4:	0f 91       	pop	r16
 9b6:	08 95       	ret

000009b8 <snprintf>:
 9b8:	ae e0       	ldi	r26, 0x0E	; 14
 9ba:	b0 e0       	ldi	r27, 0x00	; 0
 9bc:	e2 ee       	ldi	r30, 0xE2	; 226
 9be:	f4 e0       	ldi	r31, 0x04	; 4
 9c0:	0c 94 ab 07 	jmp	0xf56	; 0xf56 <__prologue_saves__+0x1c>
 9c4:	0d 89       	ldd	r16, Y+21	; 0x15
 9c6:	1e 89       	ldd	r17, Y+22	; 0x16
 9c8:	8f 89       	ldd	r24, Y+23	; 0x17
 9ca:	98 8d       	ldd	r25, Y+24	; 0x18
 9cc:	26 e0       	ldi	r18, 0x06	; 6
 9ce:	2c 83       	std	Y+4, r18	; 0x04
 9d0:	1a 83       	std	Y+2, r17	; 0x02
 9d2:	09 83       	std	Y+1, r16	; 0x01
 9d4:	97 ff       	sbrs	r25, 7
 9d6:	02 c0       	rjmp	.+4      	; 0x9dc <snprintf+0x24>
 9d8:	80 e0       	ldi	r24, 0x00	; 0
 9da:	90 e8       	ldi	r25, 0x80	; 128
 9dc:	01 97       	sbiw	r24, 0x01	; 1
 9de:	9e 83       	std	Y+6, r25	; 0x06
 9e0:	8d 83       	std	Y+5, r24	; 0x05
 9e2:	ae 01       	movw	r20, r28
 9e4:	45 5e       	subi	r20, 0xE5	; 229
 9e6:	5f 4f       	sbci	r21, 0xFF	; 255
 9e8:	69 8d       	ldd	r22, Y+25	; 0x19
 9ea:	7a 8d       	ldd	r23, Y+26	; 0x1a
 9ec:	ce 01       	movw	r24, r28
 9ee:	01 96       	adiw	r24, 0x01	; 1
 9f0:	0e 94 0c 05 	call	0xa18	; 0xa18 <vfprintf>
 9f4:	4d 81       	ldd	r20, Y+5	; 0x05
 9f6:	5e 81       	ldd	r21, Y+6	; 0x06
 9f8:	57 fd       	sbrc	r21, 7
 9fa:	0a c0       	rjmp	.+20     	; 0xa10 <snprintf+0x58>
 9fc:	2f 81       	ldd	r18, Y+7	; 0x07
 9fe:	38 85       	ldd	r19, Y+8	; 0x08
 a00:	42 17       	cp	r20, r18
 a02:	53 07       	cpc	r21, r19
 a04:	0c f4       	brge	.+2      	; 0xa08 <snprintf+0x50>
 a06:	9a 01       	movw	r18, r20
 a08:	f8 01       	movw	r30, r16
 a0a:	e2 0f       	add	r30, r18
 a0c:	f3 1f       	adc	r31, r19
 a0e:	10 82       	st	Z, r1
 a10:	2e 96       	adiw	r28, 0x0e	; 14
 a12:	e4 e0       	ldi	r30, 0x04	; 4
 a14:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__epilogue_restores__+0x1c>

00000a18 <vfprintf>:
 a18:	ab e0       	ldi	r26, 0x0B	; 11
 a1a:	b0 e0       	ldi	r27, 0x00	; 0
 a1c:	e2 e1       	ldi	r30, 0x12	; 18
 a1e:	f5 e0       	ldi	r31, 0x05	; 5
 a20:	0c 94 9d 07 	jmp	0xf3a	; 0xf3a <__prologue_saves__>
 a24:	6c 01       	movw	r12, r24
 a26:	7b 01       	movw	r14, r22
 a28:	8a 01       	movw	r16, r20
 a2a:	fc 01       	movw	r30, r24
 a2c:	17 82       	std	Z+7, r1	; 0x07
 a2e:	16 82       	std	Z+6, r1	; 0x06
 a30:	83 81       	ldd	r24, Z+3	; 0x03
 a32:	81 ff       	sbrs	r24, 1
 a34:	cc c1       	rjmp	.+920    	; 0xdce <vfprintf+0x3b6>
 a36:	ce 01       	movw	r24, r28
 a38:	01 96       	adiw	r24, 0x01	; 1
 a3a:	3c 01       	movw	r6, r24
 a3c:	f6 01       	movw	r30, r12
 a3e:	93 81       	ldd	r25, Z+3	; 0x03
 a40:	f7 01       	movw	r30, r14
 a42:	93 fd       	sbrc	r25, 3
 a44:	85 91       	lpm	r24, Z+
 a46:	93 ff       	sbrs	r25, 3
 a48:	81 91       	ld	r24, Z+
 a4a:	7f 01       	movw	r14, r30
 a4c:	88 23       	and	r24, r24
 a4e:	09 f4       	brne	.+2      	; 0xa52 <vfprintf+0x3a>
 a50:	ba c1       	rjmp	.+884    	; 0xdc6 <vfprintf+0x3ae>
 a52:	85 32       	cpi	r24, 0x25	; 37
 a54:	39 f4       	brne	.+14     	; 0xa64 <vfprintf+0x4c>
 a56:	93 fd       	sbrc	r25, 3
 a58:	85 91       	lpm	r24, Z+
 a5a:	93 ff       	sbrs	r25, 3
 a5c:	81 91       	ld	r24, Z+
 a5e:	7f 01       	movw	r14, r30
 a60:	85 32       	cpi	r24, 0x25	; 37
 a62:	29 f4       	brne	.+10     	; 0xa6e <vfprintf+0x56>
 a64:	b6 01       	movw	r22, r12
 a66:	90 e0       	ldi	r25, 0x00	; 0
 a68:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 a6c:	e7 cf       	rjmp	.-50     	; 0xa3c <vfprintf+0x24>
 a6e:	91 2c       	mov	r9, r1
 a70:	21 2c       	mov	r2, r1
 a72:	31 2c       	mov	r3, r1
 a74:	ff e1       	ldi	r31, 0x1F	; 31
 a76:	f3 15       	cp	r31, r3
 a78:	d8 f0       	brcs	.+54     	; 0xab0 <vfprintf+0x98>
 a7a:	8b 32       	cpi	r24, 0x2B	; 43
 a7c:	79 f0       	breq	.+30     	; 0xa9c <vfprintf+0x84>
 a7e:	38 f4       	brcc	.+14     	; 0xa8e <vfprintf+0x76>
 a80:	80 32       	cpi	r24, 0x20	; 32
 a82:	79 f0       	breq	.+30     	; 0xaa2 <vfprintf+0x8a>
 a84:	83 32       	cpi	r24, 0x23	; 35
 a86:	a1 f4       	brne	.+40     	; 0xab0 <vfprintf+0x98>
 a88:	23 2d       	mov	r18, r3
 a8a:	20 61       	ori	r18, 0x10	; 16
 a8c:	1d c0       	rjmp	.+58     	; 0xac8 <vfprintf+0xb0>
 a8e:	8d 32       	cpi	r24, 0x2D	; 45
 a90:	61 f0       	breq	.+24     	; 0xaaa <vfprintf+0x92>
 a92:	80 33       	cpi	r24, 0x30	; 48
 a94:	69 f4       	brne	.+26     	; 0xab0 <vfprintf+0x98>
 a96:	23 2d       	mov	r18, r3
 a98:	21 60       	ori	r18, 0x01	; 1
 a9a:	16 c0       	rjmp	.+44     	; 0xac8 <vfprintf+0xb0>
 a9c:	83 2d       	mov	r24, r3
 a9e:	82 60       	ori	r24, 0x02	; 2
 aa0:	38 2e       	mov	r3, r24
 aa2:	e3 2d       	mov	r30, r3
 aa4:	e4 60       	ori	r30, 0x04	; 4
 aa6:	3e 2e       	mov	r3, r30
 aa8:	2a c0       	rjmp	.+84     	; 0xafe <vfprintf+0xe6>
 aaa:	f3 2d       	mov	r31, r3
 aac:	f8 60       	ori	r31, 0x08	; 8
 aae:	1d c0       	rjmp	.+58     	; 0xaea <vfprintf+0xd2>
 ab0:	37 fc       	sbrc	r3, 7
 ab2:	2d c0       	rjmp	.+90     	; 0xb0e <vfprintf+0xf6>
 ab4:	20 ed       	ldi	r18, 0xD0	; 208
 ab6:	28 0f       	add	r18, r24
 ab8:	2a 30       	cpi	r18, 0x0A	; 10
 aba:	40 f0       	brcs	.+16     	; 0xacc <vfprintf+0xb4>
 abc:	8e 32       	cpi	r24, 0x2E	; 46
 abe:	b9 f4       	brne	.+46     	; 0xaee <vfprintf+0xd6>
 ac0:	36 fc       	sbrc	r3, 6
 ac2:	81 c1       	rjmp	.+770    	; 0xdc6 <vfprintf+0x3ae>
 ac4:	23 2d       	mov	r18, r3
 ac6:	20 64       	ori	r18, 0x40	; 64
 ac8:	32 2e       	mov	r3, r18
 aca:	19 c0       	rjmp	.+50     	; 0xafe <vfprintf+0xe6>
 acc:	36 fe       	sbrs	r3, 6
 ace:	06 c0       	rjmp	.+12     	; 0xadc <vfprintf+0xc4>
 ad0:	8a e0       	ldi	r24, 0x0A	; 10
 ad2:	98 9e       	mul	r9, r24
 ad4:	20 0d       	add	r18, r0
 ad6:	11 24       	eor	r1, r1
 ad8:	92 2e       	mov	r9, r18
 ada:	11 c0       	rjmp	.+34     	; 0xafe <vfprintf+0xe6>
 adc:	ea e0       	ldi	r30, 0x0A	; 10
 ade:	2e 9e       	mul	r2, r30
 ae0:	20 0d       	add	r18, r0
 ae2:	11 24       	eor	r1, r1
 ae4:	22 2e       	mov	r2, r18
 ae6:	f3 2d       	mov	r31, r3
 ae8:	f0 62       	ori	r31, 0x20	; 32
 aea:	3f 2e       	mov	r3, r31
 aec:	08 c0       	rjmp	.+16     	; 0xafe <vfprintf+0xe6>
 aee:	8c 36       	cpi	r24, 0x6C	; 108
 af0:	21 f4       	brne	.+8      	; 0xafa <vfprintf+0xe2>
 af2:	83 2d       	mov	r24, r3
 af4:	80 68       	ori	r24, 0x80	; 128
 af6:	38 2e       	mov	r3, r24
 af8:	02 c0       	rjmp	.+4      	; 0xafe <vfprintf+0xe6>
 afa:	88 36       	cpi	r24, 0x68	; 104
 afc:	41 f4       	brne	.+16     	; 0xb0e <vfprintf+0xf6>
 afe:	f7 01       	movw	r30, r14
 b00:	93 fd       	sbrc	r25, 3
 b02:	85 91       	lpm	r24, Z+
 b04:	93 ff       	sbrs	r25, 3
 b06:	81 91       	ld	r24, Z+
 b08:	7f 01       	movw	r14, r30
 b0a:	81 11       	cpse	r24, r1
 b0c:	b3 cf       	rjmp	.-154    	; 0xa74 <vfprintf+0x5c>
 b0e:	98 2f       	mov	r25, r24
 b10:	9f 7d       	andi	r25, 0xDF	; 223
 b12:	95 54       	subi	r25, 0x45	; 69
 b14:	93 30       	cpi	r25, 0x03	; 3
 b16:	28 f4       	brcc	.+10     	; 0xb22 <vfprintf+0x10a>
 b18:	0c 5f       	subi	r16, 0xFC	; 252
 b1a:	1f 4f       	sbci	r17, 0xFF	; 255
 b1c:	9f e3       	ldi	r25, 0x3F	; 63
 b1e:	99 83       	std	Y+1, r25	; 0x01
 b20:	0d c0       	rjmp	.+26     	; 0xb3c <vfprintf+0x124>
 b22:	83 36       	cpi	r24, 0x63	; 99
 b24:	31 f0       	breq	.+12     	; 0xb32 <vfprintf+0x11a>
 b26:	83 37       	cpi	r24, 0x73	; 115
 b28:	71 f0       	breq	.+28     	; 0xb46 <vfprintf+0x12e>
 b2a:	83 35       	cpi	r24, 0x53	; 83
 b2c:	09 f0       	breq	.+2      	; 0xb30 <vfprintf+0x118>
 b2e:	59 c0       	rjmp	.+178    	; 0xbe2 <vfprintf+0x1ca>
 b30:	21 c0       	rjmp	.+66     	; 0xb74 <vfprintf+0x15c>
 b32:	f8 01       	movw	r30, r16
 b34:	80 81       	ld	r24, Z
 b36:	89 83       	std	Y+1, r24	; 0x01
 b38:	0e 5f       	subi	r16, 0xFE	; 254
 b3a:	1f 4f       	sbci	r17, 0xFF	; 255
 b3c:	88 24       	eor	r8, r8
 b3e:	83 94       	inc	r8
 b40:	91 2c       	mov	r9, r1
 b42:	53 01       	movw	r10, r6
 b44:	13 c0       	rjmp	.+38     	; 0xb6c <vfprintf+0x154>
 b46:	28 01       	movw	r4, r16
 b48:	f2 e0       	ldi	r31, 0x02	; 2
 b4a:	4f 0e       	add	r4, r31
 b4c:	51 1c       	adc	r5, r1
 b4e:	f8 01       	movw	r30, r16
 b50:	a0 80       	ld	r10, Z
 b52:	b1 80       	ldd	r11, Z+1	; 0x01
 b54:	36 fe       	sbrs	r3, 6
 b56:	03 c0       	rjmp	.+6      	; 0xb5e <vfprintf+0x146>
 b58:	69 2d       	mov	r22, r9
 b5a:	70 e0       	ldi	r23, 0x00	; 0
 b5c:	02 c0       	rjmp	.+4      	; 0xb62 <vfprintf+0x14a>
 b5e:	6f ef       	ldi	r22, 0xFF	; 255
 b60:	7f ef       	ldi	r23, 0xFF	; 255
 b62:	c5 01       	movw	r24, r10
 b64:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <strnlen>
 b68:	4c 01       	movw	r8, r24
 b6a:	82 01       	movw	r16, r4
 b6c:	f3 2d       	mov	r31, r3
 b6e:	ff 77       	andi	r31, 0x7F	; 127
 b70:	3f 2e       	mov	r3, r31
 b72:	16 c0       	rjmp	.+44     	; 0xba0 <vfprintf+0x188>
 b74:	28 01       	movw	r4, r16
 b76:	22 e0       	ldi	r18, 0x02	; 2
 b78:	42 0e       	add	r4, r18
 b7a:	51 1c       	adc	r5, r1
 b7c:	f8 01       	movw	r30, r16
 b7e:	a0 80       	ld	r10, Z
 b80:	b1 80       	ldd	r11, Z+1	; 0x01
 b82:	36 fe       	sbrs	r3, 6
 b84:	03 c0       	rjmp	.+6      	; 0xb8c <vfprintf+0x174>
 b86:	69 2d       	mov	r22, r9
 b88:	70 e0       	ldi	r23, 0x00	; 0
 b8a:	02 c0       	rjmp	.+4      	; 0xb90 <vfprintf+0x178>
 b8c:	6f ef       	ldi	r22, 0xFF	; 255
 b8e:	7f ef       	ldi	r23, 0xFF	; 255
 b90:	c5 01       	movw	r24, r10
 b92:	0e 94 ed 06 	call	0xdda	; 0xdda <strnlen_P>
 b96:	4c 01       	movw	r8, r24
 b98:	f3 2d       	mov	r31, r3
 b9a:	f0 68       	ori	r31, 0x80	; 128
 b9c:	3f 2e       	mov	r3, r31
 b9e:	82 01       	movw	r16, r4
 ba0:	33 fc       	sbrc	r3, 3
 ba2:	1b c0       	rjmp	.+54     	; 0xbda <vfprintf+0x1c2>
 ba4:	82 2d       	mov	r24, r2
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	88 16       	cp	r8, r24
 baa:	99 06       	cpc	r9, r25
 bac:	b0 f4       	brcc	.+44     	; 0xbda <vfprintf+0x1c2>
 bae:	b6 01       	movw	r22, r12
 bb0:	80 e2       	ldi	r24, 0x20	; 32
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 bb8:	2a 94       	dec	r2
 bba:	f4 cf       	rjmp	.-24     	; 0xba4 <vfprintf+0x18c>
 bbc:	f5 01       	movw	r30, r10
 bbe:	37 fc       	sbrc	r3, 7
 bc0:	85 91       	lpm	r24, Z+
 bc2:	37 fe       	sbrs	r3, 7
 bc4:	81 91       	ld	r24, Z+
 bc6:	5f 01       	movw	r10, r30
 bc8:	b6 01       	movw	r22, r12
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 bd0:	21 10       	cpse	r2, r1
 bd2:	2a 94       	dec	r2
 bd4:	21 e0       	ldi	r18, 0x01	; 1
 bd6:	82 1a       	sub	r8, r18
 bd8:	91 08       	sbc	r9, r1
 bda:	81 14       	cp	r8, r1
 bdc:	91 04       	cpc	r9, r1
 bde:	71 f7       	brne	.-36     	; 0xbbc <vfprintf+0x1a4>
 be0:	e8 c0       	rjmp	.+464    	; 0xdb2 <vfprintf+0x39a>
 be2:	84 36       	cpi	r24, 0x64	; 100
 be4:	11 f0       	breq	.+4      	; 0xbea <vfprintf+0x1d2>
 be6:	89 36       	cpi	r24, 0x69	; 105
 be8:	41 f5       	brne	.+80     	; 0xc3a <vfprintf+0x222>
 bea:	f8 01       	movw	r30, r16
 bec:	37 fe       	sbrs	r3, 7
 bee:	07 c0       	rjmp	.+14     	; 0xbfe <vfprintf+0x1e6>
 bf0:	60 81       	ld	r22, Z
 bf2:	71 81       	ldd	r23, Z+1	; 0x01
 bf4:	82 81       	ldd	r24, Z+2	; 0x02
 bf6:	93 81       	ldd	r25, Z+3	; 0x03
 bf8:	0c 5f       	subi	r16, 0xFC	; 252
 bfa:	1f 4f       	sbci	r17, 0xFF	; 255
 bfc:	08 c0       	rjmp	.+16     	; 0xc0e <vfprintf+0x1f6>
 bfe:	60 81       	ld	r22, Z
 c00:	71 81       	ldd	r23, Z+1	; 0x01
 c02:	07 2e       	mov	r0, r23
 c04:	00 0c       	add	r0, r0
 c06:	88 0b       	sbc	r24, r24
 c08:	99 0b       	sbc	r25, r25
 c0a:	0e 5f       	subi	r16, 0xFE	; 254
 c0c:	1f 4f       	sbci	r17, 0xFF	; 255
 c0e:	f3 2d       	mov	r31, r3
 c10:	ff 76       	andi	r31, 0x6F	; 111
 c12:	3f 2e       	mov	r3, r31
 c14:	97 ff       	sbrs	r25, 7
 c16:	09 c0       	rjmp	.+18     	; 0xc2a <vfprintf+0x212>
 c18:	90 95       	com	r25
 c1a:	80 95       	com	r24
 c1c:	70 95       	com	r23
 c1e:	61 95       	neg	r22
 c20:	7f 4f       	sbci	r23, 0xFF	; 255
 c22:	8f 4f       	sbci	r24, 0xFF	; 255
 c24:	9f 4f       	sbci	r25, 0xFF	; 255
 c26:	f0 68       	ori	r31, 0x80	; 128
 c28:	3f 2e       	mov	r3, r31
 c2a:	2a e0       	ldi	r18, 0x0A	; 10
 c2c:	30 e0       	ldi	r19, 0x00	; 0
 c2e:	a3 01       	movw	r20, r6
 c30:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__ultoa_invert>
 c34:	88 2e       	mov	r8, r24
 c36:	86 18       	sub	r8, r6
 c38:	45 c0       	rjmp	.+138    	; 0xcc4 <vfprintf+0x2ac>
 c3a:	85 37       	cpi	r24, 0x75	; 117
 c3c:	31 f4       	brne	.+12     	; 0xc4a <vfprintf+0x232>
 c3e:	23 2d       	mov	r18, r3
 c40:	2f 7e       	andi	r18, 0xEF	; 239
 c42:	b2 2e       	mov	r11, r18
 c44:	2a e0       	ldi	r18, 0x0A	; 10
 c46:	30 e0       	ldi	r19, 0x00	; 0
 c48:	25 c0       	rjmp	.+74     	; 0xc94 <vfprintf+0x27c>
 c4a:	93 2d       	mov	r25, r3
 c4c:	99 7f       	andi	r25, 0xF9	; 249
 c4e:	b9 2e       	mov	r11, r25
 c50:	8f 36       	cpi	r24, 0x6F	; 111
 c52:	c1 f0       	breq	.+48     	; 0xc84 <vfprintf+0x26c>
 c54:	18 f4       	brcc	.+6      	; 0xc5c <vfprintf+0x244>
 c56:	88 35       	cpi	r24, 0x58	; 88
 c58:	79 f0       	breq	.+30     	; 0xc78 <vfprintf+0x260>
 c5a:	b5 c0       	rjmp	.+362    	; 0xdc6 <vfprintf+0x3ae>
 c5c:	80 37       	cpi	r24, 0x70	; 112
 c5e:	19 f0       	breq	.+6      	; 0xc66 <vfprintf+0x24e>
 c60:	88 37       	cpi	r24, 0x78	; 120
 c62:	21 f0       	breq	.+8      	; 0xc6c <vfprintf+0x254>
 c64:	b0 c0       	rjmp	.+352    	; 0xdc6 <vfprintf+0x3ae>
 c66:	e9 2f       	mov	r30, r25
 c68:	e0 61       	ori	r30, 0x10	; 16
 c6a:	be 2e       	mov	r11, r30
 c6c:	b4 fe       	sbrs	r11, 4
 c6e:	0d c0       	rjmp	.+26     	; 0xc8a <vfprintf+0x272>
 c70:	fb 2d       	mov	r31, r11
 c72:	f4 60       	ori	r31, 0x04	; 4
 c74:	bf 2e       	mov	r11, r31
 c76:	09 c0       	rjmp	.+18     	; 0xc8a <vfprintf+0x272>
 c78:	34 fe       	sbrs	r3, 4
 c7a:	0a c0       	rjmp	.+20     	; 0xc90 <vfprintf+0x278>
 c7c:	29 2f       	mov	r18, r25
 c7e:	26 60       	ori	r18, 0x06	; 6
 c80:	b2 2e       	mov	r11, r18
 c82:	06 c0       	rjmp	.+12     	; 0xc90 <vfprintf+0x278>
 c84:	28 e0       	ldi	r18, 0x08	; 8
 c86:	30 e0       	ldi	r19, 0x00	; 0
 c88:	05 c0       	rjmp	.+10     	; 0xc94 <vfprintf+0x27c>
 c8a:	20 e1       	ldi	r18, 0x10	; 16
 c8c:	30 e0       	ldi	r19, 0x00	; 0
 c8e:	02 c0       	rjmp	.+4      	; 0xc94 <vfprintf+0x27c>
 c90:	20 e1       	ldi	r18, 0x10	; 16
 c92:	32 e0       	ldi	r19, 0x02	; 2
 c94:	f8 01       	movw	r30, r16
 c96:	b7 fe       	sbrs	r11, 7
 c98:	07 c0       	rjmp	.+14     	; 0xca8 <vfprintf+0x290>
 c9a:	60 81       	ld	r22, Z
 c9c:	71 81       	ldd	r23, Z+1	; 0x01
 c9e:	82 81       	ldd	r24, Z+2	; 0x02
 ca0:	93 81       	ldd	r25, Z+3	; 0x03
 ca2:	0c 5f       	subi	r16, 0xFC	; 252
 ca4:	1f 4f       	sbci	r17, 0xFF	; 255
 ca6:	06 c0       	rjmp	.+12     	; 0xcb4 <vfprintf+0x29c>
 ca8:	60 81       	ld	r22, Z
 caa:	71 81       	ldd	r23, Z+1	; 0x01
 cac:	80 e0       	ldi	r24, 0x00	; 0
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	0e 5f       	subi	r16, 0xFE	; 254
 cb2:	1f 4f       	sbci	r17, 0xFF	; 255
 cb4:	a3 01       	movw	r20, r6
 cb6:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__ultoa_invert>
 cba:	88 2e       	mov	r8, r24
 cbc:	86 18       	sub	r8, r6
 cbe:	fb 2d       	mov	r31, r11
 cc0:	ff 77       	andi	r31, 0x7F	; 127
 cc2:	3f 2e       	mov	r3, r31
 cc4:	36 fe       	sbrs	r3, 6
 cc6:	0d c0       	rjmp	.+26     	; 0xce2 <vfprintf+0x2ca>
 cc8:	23 2d       	mov	r18, r3
 cca:	2e 7f       	andi	r18, 0xFE	; 254
 ccc:	a2 2e       	mov	r10, r18
 cce:	89 14       	cp	r8, r9
 cd0:	58 f4       	brcc	.+22     	; 0xce8 <vfprintf+0x2d0>
 cd2:	34 fe       	sbrs	r3, 4
 cd4:	0b c0       	rjmp	.+22     	; 0xcec <vfprintf+0x2d4>
 cd6:	32 fc       	sbrc	r3, 2
 cd8:	09 c0       	rjmp	.+18     	; 0xcec <vfprintf+0x2d4>
 cda:	83 2d       	mov	r24, r3
 cdc:	8e 7e       	andi	r24, 0xEE	; 238
 cde:	a8 2e       	mov	r10, r24
 ce0:	05 c0       	rjmp	.+10     	; 0xcec <vfprintf+0x2d4>
 ce2:	b8 2c       	mov	r11, r8
 ce4:	a3 2c       	mov	r10, r3
 ce6:	03 c0       	rjmp	.+6      	; 0xcee <vfprintf+0x2d6>
 ce8:	b8 2c       	mov	r11, r8
 cea:	01 c0       	rjmp	.+2      	; 0xcee <vfprintf+0x2d6>
 cec:	b9 2c       	mov	r11, r9
 cee:	a4 fe       	sbrs	r10, 4
 cf0:	0f c0       	rjmp	.+30     	; 0xd10 <vfprintf+0x2f8>
 cf2:	fe 01       	movw	r30, r28
 cf4:	e8 0d       	add	r30, r8
 cf6:	f1 1d       	adc	r31, r1
 cf8:	80 81       	ld	r24, Z
 cfa:	80 33       	cpi	r24, 0x30	; 48
 cfc:	21 f4       	brne	.+8      	; 0xd06 <vfprintf+0x2ee>
 cfe:	9a 2d       	mov	r25, r10
 d00:	99 7e       	andi	r25, 0xE9	; 233
 d02:	a9 2e       	mov	r10, r25
 d04:	09 c0       	rjmp	.+18     	; 0xd18 <vfprintf+0x300>
 d06:	a2 fe       	sbrs	r10, 2
 d08:	06 c0       	rjmp	.+12     	; 0xd16 <vfprintf+0x2fe>
 d0a:	b3 94       	inc	r11
 d0c:	b3 94       	inc	r11
 d0e:	04 c0       	rjmp	.+8      	; 0xd18 <vfprintf+0x300>
 d10:	8a 2d       	mov	r24, r10
 d12:	86 78       	andi	r24, 0x86	; 134
 d14:	09 f0       	breq	.+2      	; 0xd18 <vfprintf+0x300>
 d16:	b3 94       	inc	r11
 d18:	a3 fc       	sbrc	r10, 3
 d1a:	11 c0       	rjmp	.+34     	; 0xd3e <vfprintf+0x326>
 d1c:	a0 fe       	sbrs	r10, 0
 d1e:	06 c0       	rjmp	.+12     	; 0xd2c <vfprintf+0x314>
 d20:	b2 14       	cp	r11, r2
 d22:	88 f4       	brcc	.+34     	; 0xd46 <vfprintf+0x32e>
 d24:	28 0c       	add	r2, r8
 d26:	92 2c       	mov	r9, r2
 d28:	9b 18       	sub	r9, r11
 d2a:	0e c0       	rjmp	.+28     	; 0xd48 <vfprintf+0x330>
 d2c:	b2 14       	cp	r11, r2
 d2e:	60 f4       	brcc	.+24     	; 0xd48 <vfprintf+0x330>
 d30:	b6 01       	movw	r22, r12
 d32:	80 e2       	ldi	r24, 0x20	; 32
 d34:	90 e0       	ldi	r25, 0x00	; 0
 d36:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d3a:	b3 94       	inc	r11
 d3c:	f7 cf       	rjmp	.-18     	; 0xd2c <vfprintf+0x314>
 d3e:	b2 14       	cp	r11, r2
 d40:	18 f4       	brcc	.+6      	; 0xd48 <vfprintf+0x330>
 d42:	2b 18       	sub	r2, r11
 d44:	02 c0       	rjmp	.+4      	; 0xd4a <vfprintf+0x332>
 d46:	98 2c       	mov	r9, r8
 d48:	21 2c       	mov	r2, r1
 d4a:	a4 fe       	sbrs	r10, 4
 d4c:	10 c0       	rjmp	.+32     	; 0xd6e <vfprintf+0x356>
 d4e:	b6 01       	movw	r22, r12
 d50:	80 e3       	ldi	r24, 0x30	; 48
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d58:	a2 fe       	sbrs	r10, 2
 d5a:	17 c0       	rjmp	.+46     	; 0xd8a <vfprintf+0x372>
 d5c:	a1 fc       	sbrc	r10, 1
 d5e:	03 c0       	rjmp	.+6      	; 0xd66 <vfprintf+0x34e>
 d60:	88 e7       	ldi	r24, 0x78	; 120
 d62:	90 e0       	ldi	r25, 0x00	; 0
 d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x352>
 d66:	88 e5       	ldi	r24, 0x58	; 88
 d68:	90 e0       	ldi	r25, 0x00	; 0
 d6a:	b6 01       	movw	r22, r12
 d6c:	0c c0       	rjmp	.+24     	; 0xd86 <vfprintf+0x36e>
 d6e:	8a 2d       	mov	r24, r10
 d70:	86 78       	andi	r24, 0x86	; 134
 d72:	59 f0       	breq	.+22     	; 0xd8a <vfprintf+0x372>
 d74:	a1 fe       	sbrs	r10, 1
 d76:	02 c0       	rjmp	.+4      	; 0xd7c <vfprintf+0x364>
 d78:	8b e2       	ldi	r24, 0x2B	; 43
 d7a:	01 c0       	rjmp	.+2      	; 0xd7e <vfprintf+0x366>
 d7c:	80 e2       	ldi	r24, 0x20	; 32
 d7e:	a7 fc       	sbrc	r10, 7
 d80:	8d e2       	ldi	r24, 0x2D	; 45
 d82:	b6 01       	movw	r22, r12
 d84:	90 e0       	ldi	r25, 0x00	; 0
 d86:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d8a:	89 14       	cp	r8, r9
 d8c:	38 f4       	brcc	.+14     	; 0xd9c <vfprintf+0x384>
 d8e:	b6 01       	movw	r22, r12
 d90:	80 e3       	ldi	r24, 0x30	; 48
 d92:	90 e0       	ldi	r25, 0x00	; 0
 d94:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d98:	9a 94       	dec	r9
 d9a:	f7 cf       	rjmp	.-18     	; 0xd8a <vfprintf+0x372>
 d9c:	8a 94       	dec	r8
 d9e:	f3 01       	movw	r30, r6
 da0:	e8 0d       	add	r30, r8
 da2:	f1 1d       	adc	r31, r1
 da4:	80 81       	ld	r24, Z
 da6:	b6 01       	movw	r22, r12
 da8:	90 e0       	ldi	r25, 0x00	; 0
 daa:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 dae:	81 10       	cpse	r8, r1
 db0:	f5 cf       	rjmp	.-22     	; 0xd9c <vfprintf+0x384>
 db2:	22 20       	and	r2, r2
 db4:	09 f4       	brne	.+2      	; 0xdb8 <vfprintf+0x3a0>
 db6:	42 ce       	rjmp	.-892    	; 0xa3c <vfprintf+0x24>
 db8:	b6 01       	movw	r22, r12
 dba:	80 e2       	ldi	r24, 0x20	; 32
 dbc:	90 e0       	ldi	r25, 0x00	; 0
 dbe:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 dc2:	2a 94       	dec	r2
 dc4:	f6 cf       	rjmp	.-20     	; 0xdb2 <vfprintf+0x39a>
 dc6:	f6 01       	movw	r30, r12
 dc8:	86 81       	ldd	r24, Z+6	; 0x06
 dca:	97 81       	ldd	r25, Z+7	; 0x07
 dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <vfprintf+0x3ba>
 dce:	8f ef       	ldi	r24, 0xFF	; 255
 dd0:	9f ef       	ldi	r25, 0xFF	; 255
 dd2:	2b 96       	adiw	r28, 0x0b	; 11
 dd4:	e2 e1       	ldi	r30, 0x12	; 18
 dd6:	0c 94 b9 07 	jmp	0xf72	; 0xf72 <__epilogue_restores__>

00000dda <strnlen_P>:
 dda:	fc 01       	movw	r30, r24
 ddc:	05 90       	lpm	r0, Z+
 dde:	61 50       	subi	r22, 0x01	; 1
 de0:	70 40       	sbci	r23, 0x00	; 0
 de2:	01 10       	cpse	r0, r1
 de4:	d8 f7       	brcc	.-10     	; 0xddc <strnlen_P+0x2>
 de6:	80 95       	com	r24
 de8:	90 95       	com	r25
 dea:	8e 0f       	add	r24, r30
 dec:	9f 1f       	adc	r25, r31
 dee:	08 95       	ret

00000df0 <strnlen>:
 df0:	fc 01       	movw	r30, r24
 df2:	61 50       	subi	r22, 0x01	; 1
 df4:	70 40       	sbci	r23, 0x00	; 0
 df6:	01 90       	ld	r0, Z+
 df8:	01 10       	cpse	r0, r1
 dfa:	d8 f7       	brcc	.-10     	; 0xdf2 <strnlen+0x2>
 dfc:	80 95       	com	r24
 dfe:	90 95       	com	r25
 e00:	8e 0f       	add	r24, r30
 e02:	9f 1f       	adc	r25, r31
 e04:	08 95       	ret

00000e06 <fputc>:
 e06:	0f 93       	push	r16
 e08:	1f 93       	push	r17
 e0a:	cf 93       	push	r28
 e0c:	df 93       	push	r29
 e0e:	fb 01       	movw	r30, r22
 e10:	23 81       	ldd	r18, Z+3	; 0x03
 e12:	21 fd       	sbrc	r18, 1
 e14:	03 c0       	rjmp	.+6      	; 0xe1c <fputc+0x16>
 e16:	8f ef       	ldi	r24, 0xFF	; 255
 e18:	9f ef       	ldi	r25, 0xFF	; 255
 e1a:	2c c0       	rjmp	.+88     	; 0xe74 <fputc+0x6e>
 e1c:	22 ff       	sbrs	r18, 2
 e1e:	16 c0       	rjmp	.+44     	; 0xe4c <fputc+0x46>
 e20:	46 81       	ldd	r20, Z+6	; 0x06
 e22:	57 81       	ldd	r21, Z+7	; 0x07
 e24:	24 81       	ldd	r18, Z+4	; 0x04
 e26:	35 81       	ldd	r19, Z+5	; 0x05
 e28:	42 17       	cp	r20, r18
 e2a:	53 07       	cpc	r21, r19
 e2c:	44 f4       	brge	.+16     	; 0xe3e <fputc+0x38>
 e2e:	a0 81       	ld	r26, Z
 e30:	b1 81       	ldd	r27, Z+1	; 0x01
 e32:	9d 01       	movw	r18, r26
 e34:	2f 5f       	subi	r18, 0xFF	; 255
 e36:	3f 4f       	sbci	r19, 0xFF	; 255
 e38:	31 83       	std	Z+1, r19	; 0x01
 e3a:	20 83       	st	Z, r18
 e3c:	8c 93       	st	X, r24
 e3e:	26 81       	ldd	r18, Z+6	; 0x06
 e40:	37 81       	ldd	r19, Z+7	; 0x07
 e42:	2f 5f       	subi	r18, 0xFF	; 255
 e44:	3f 4f       	sbci	r19, 0xFF	; 255
 e46:	37 83       	std	Z+7, r19	; 0x07
 e48:	26 83       	std	Z+6, r18	; 0x06
 e4a:	14 c0       	rjmp	.+40     	; 0xe74 <fputc+0x6e>
 e4c:	8b 01       	movw	r16, r22
 e4e:	ec 01       	movw	r28, r24
 e50:	fb 01       	movw	r30, r22
 e52:	00 84       	ldd	r0, Z+8	; 0x08
 e54:	f1 85       	ldd	r31, Z+9	; 0x09
 e56:	e0 2d       	mov	r30, r0
 e58:	09 95       	icall
 e5a:	89 2b       	or	r24, r25
 e5c:	e1 f6       	brne	.-72     	; 0xe16 <fputc+0x10>
 e5e:	d8 01       	movw	r26, r16
 e60:	16 96       	adiw	r26, 0x06	; 6
 e62:	8d 91       	ld	r24, X+
 e64:	9c 91       	ld	r25, X
 e66:	17 97       	sbiw	r26, 0x07	; 7
 e68:	01 96       	adiw	r24, 0x01	; 1
 e6a:	17 96       	adiw	r26, 0x07	; 7
 e6c:	9c 93       	st	X, r25
 e6e:	8e 93       	st	-X, r24
 e70:	16 97       	sbiw	r26, 0x06	; 6
 e72:	ce 01       	movw	r24, r28
 e74:	df 91       	pop	r29
 e76:	cf 91       	pop	r28
 e78:	1f 91       	pop	r17
 e7a:	0f 91       	pop	r16
 e7c:	08 95       	ret

00000e7e <__ultoa_invert>:
 e7e:	fa 01       	movw	r30, r20
 e80:	aa 27       	eor	r26, r26
 e82:	28 30       	cpi	r18, 0x08	; 8
 e84:	51 f1       	breq	.+84     	; 0xeda <__ultoa_invert+0x5c>
 e86:	20 31       	cpi	r18, 0x10	; 16
 e88:	81 f1       	breq	.+96     	; 0xeea <__ultoa_invert+0x6c>
 e8a:	e8 94       	clt
 e8c:	6f 93       	push	r22
 e8e:	6e 7f       	andi	r22, 0xFE	; 254
 e90:	6e 5f       	subi	r22, 0xFE	; 254
 e92:	7f 4f       	sbci	r23, 0xFF	; 255
 e94:	8f 4f       	sbci	r24, 0xFF	; 255
 e96:	9f 4f       	sbci	r25, 0xFF	; 255
 e98:	af 4f       	sbci	r26, 0xFF	; 255
 e9a:	b1 e0       	ldi	r27, 0x01	; 1
 e9c:	3e d0       	rcall	.+124    	; 0xf1a <__ultoa_invert+0x9c>
 e9e:	b4 e0       	ldi	r27, 0x04	; 4
 ea0:	3c d0       	rcall	.+120    	; 0xf1a <__ultoa_invert+0x9c>
 ea2:	67 0f       	add	r22, r23
 ea4:	78 1f       	adc	r23, r24
 ea6:	89 1f       	adc	r24, r25
 ea8:	9a 1f       	adc	r25, r26
 eaa:	a1 1d       	adc	r26, r1
 eac:	68 0f       	add	r22, r24
 eae:	79 1f       	adc	r23, r25
 eb0:	8a 1f       	adc	r24, r26
 eb2:	91 1d       	adc	r25, r1
 eb4:	a1 1d       	adc	r26, r1
 eb6:	6a 0f       	add	r22, r26
 eb8:	71 1d       	adc	r23, r1
 eba:	81 1d       	adc	r24, r1
 ebc:	91 1d       	adc	r25, r1
 ebe:	a1 1d       	adc	r26, r1
 ec0:	20 d0       	rcall	.+64     	; 0xf02 <__ultoa_invert+0x84>
 ec2:	09 f4       	brne	.+2      	; 0xec6 <__ultoa_invert+0x48>
 ec4:	68 94       	set
 ec6:	3f 91       	pop	r19
 ec8:	2a e0       	ldi	r18, 0x0A	; 10
 eca:	26 9f       	mul	r18, r22
 ecc:	11 24       	eor	r1, r1
 ece:	30 19       	sub	r19, r0
 ed0:	30 5d       	subi	r19, 0xD0	; 208
 ed2:	31 93       	st	Z+, r19
 ed4:	de f6       	brtc	.-74     	; 0xe8c <__ultoa_invert+0xe>
 ed6:	cf 01       	movw	r24, r30
 ed8:	08 95       	ret
 eda:	46 2f       	mov	r20, r22
 edc:	47 70       	andi	r20, 0x07	; 7
 ede:	40 5d       	subi	r20, 0xD0	; 208
 ee0:	41 93       	st	Z+, r20
 ee2:	b3 e0       	ldi	r27, 0x03	; 3
 ee4:	0f d0       	rcall	.+30     	; 0xf04 <__ultoa_invert+0x86>
 ee6:	c9 f7       	brne	.-14     	; 0xeda <__ultoa_invert+0x5c>
 ee8:	f6 cf       	rjmp	.-20     	; 0xed6 <__ultoa_invert+0x58>
 eea:	46 2f       	mov	r20, r22
 eec:	4f 70       	andi	r20, 0x0F	; 15
 eee:	40 5d       	subi	r20, 0xD0	; 208
 ef0:	4a 33       	cpi	r20, 0x3A	; 58
 ef2:	18 f0       	brcs	.+6      	; 0xefa <__ultoa_invert+0x7c>
 ef4:	49 5d       	subi	r20, 0xD9	; 217
 ef6:	31 fd       	sbrc	r19, 1
 ef8:	40 52       	subi	r20, 0x20	; 32
 efa:	41 93       	st	Z+, r20
 efc:	02 d0       	rcall	.+4      	; 0xf02 <__ultoa_invert+0x84>
 efe:	a9 f7       	brne	.-22     	; 0xeea <__ultoa_invert+0x6c>
 f00:	ea cf       	rjmp	.-44     	; 0xed6 <__ultoa_invert+0x58>
 f02:	b4 e0       	ldi	r27, 0x04	; 4
 f04:	a6 95       	lsr	r26
 f06:	97 95       	ror	r25
 f08:	87 95       	ror	r24
 f0a:	77 95       	ror	r23
 f0c:	67 95       	ror	r22
 f0e:	ba 95       	dec	r27
 f10:	c9 f7       	brne	.-14     	; 0xf04 <__ultoa_invert+0x86>
 f12:	00 97       	sbiw	r24, 0x00	; 0
 f14:	61 05       	cpc	r22, r1
 f16:	71 05       	cpc	r23, r1
 f18:	08 95       	ret
 f1a:	9b 01       	movw	r18, r22
 f1c:	ac 01       	movw	r20, r24
 f1e:	0a 2e       	mov	r0, r26
 f20:	06 94       	lsr	r0
 f22:	57 95       	ror	r21
 f24:	47 95       	ror	r20
 f26:	37 95       	ror	r19
 f28:	27 95       	ror	r18
 f2a:	ba 95       	dec	r27
 f2c:	c9 f7       	brne	.-14     	; 0xf20 <__ultoa_invert+0xa2>
 f2e:	62 0f       	add	r22, r18
 f30:	73 1f       	adc	r23, r19
 f32:	84 1f       	adc	r24, r20
 f34:	95 1f       	adc	r25, r21
 f36:	a0 1d       	adc	r26, r0
 f38:	08 95       	ret

00000f3a <__prologue_saves__>:
 f3a:	2f 92       	push	r2
 f3c:	3f 92       	push	r3
 f3e:	4f 92       	push	r4
 f40:	5f 92       	push	r5
 f42:	6f 92       	push	r6
 f44:	7f 92       	push	r7
 f46:	8f 92       	push	r8
 f48:	9f 92       	push	r9
 f4a:	af 92       	push	r10
 f4c:	bf 92       	push	r11
 f4e:	cf 92       	push	r12
 f50:	df 92       	push	r13
 f52:	ef 92       	push	r14
 f54:	ff 92       	push	r15
 f56:	0f 93       	push	r16
 f58:	1f 93       	push	r17
 f5a:	cf 93       	push	r28
 f5c:	df 93       	push	r29
 f5e:	cd b7       	in	r28, 0x3d	; 61
 f60:	de b7       	in	r29, 0x3e	; 62
 f62:	ca 1b       	sub	r28, r26
 f64:	db 0b       	sbc	r29, r27
 f66:	0f b6       	in	r0, 0x3f	; 63
 f68:	f8 94       	cli
 f6a:	de bf       	out	0x3e, r29	; 62
 f6c:	0f be       	out	0x3f, r0	; 63
 f6e:	cd bf       	out	0x3d, r28	; 61
 f70:	09 94       	ijmp

00000f72 <__epilogue_restores__>:
 f72:	2a 88       	ldd	r2, Y+18	; 0x12
 f74:	39 88       	ldd	r3, Y+17	; 0x11
 f76:	48 88       	ldd	r4, Y+16	; 0x10
 f78:	5f 84       	ldd	r5, Y+15	; 0x0f
 f7a:	6e 84       	ldd	r6, Y+14	; 0x0e
 f7c:	7d 84       	ldd	r7, Y+13	; 0x0d
 f7e:	8c 84       	ldd	r8, Y+12	; 0x0c
 f80:	9b 84       	ldd	r9, Y+11	; 0x0b
 f82:	aa 84       	ldd	r10, Y+10	; 0x0a
 f84:	b9 84       	ldd	r11, Y+9	; 0x09
 f86:	c8 84       	ldd	r12, Y+8	; 0x08
 f88:	df 80       	ldd	r13, Y+7	; 0x07
 f8a:	ee 80       	ldd	r14, Y+6	; 0x06
 f8c:	fd 80       	ldd	r15, Y+5	; 0x05
 f8e:	0c 81       	ldd	r16, Y+4	; 0x04
 f90:	1b 81       	ldd	r17, Y+3	; 0x03
 f92:	aa 81       	ldd	r26, Y+2	; 0x02
 f94:	b9 81       	ldd	r27, Y+1	; 0x01
 f96:	ce 0f       	add	r28, r30
 f98:	d1 1d       	adc	r29, r1
 f9a:	0f b6       	in	r0, 0x3f	; 63
 f9c:	f8 94       	cli
 f9e:	de bf       	out	0x3e, r29	; 62
 fa0:	0f be       	out	0x3f, r0	; 63
 fa2:	cd bf       	out	0x3d, r28	; 61
 fa4:	ed 01       	movw	r28, r26
 fa6:	08 95       	ret

00000fa8 <_exit>:
 fa8:	f8 94       	cli

00000faa <__stop_program>:
 faa:	ff cf       	rjmp	.-2      	; 0xfaa <__stop_program>
