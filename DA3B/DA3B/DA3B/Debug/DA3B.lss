
DA3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000556  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005aa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000779  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d4  00000000  00000000  00000dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c8  00000000  00000000  000014a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  00001774  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038f  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000018a  00000000  00000000  00001bc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001d4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__vector_13>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 4a 00 	call	0x94	; 0x94 <main>
  78:	0c 94 a9 02 	jmp	0x552	; 0x552 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <usart_init>:
	TCNT1 = 49911;              // Reset TCNT value for loop
}

void usart_init (void)
{
	UCSR0B = (1<<TXEN0);
  80:	88 e0       	ldi	r24, 0x08	; 8
  82:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1<< UCSZ01)|(1<<UCSZ00);
  86:	86 e0       	ldi	r24, 0x06	; 6
  88:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0L = F_CPU/16/BAUD_RATE-1;
  8c:	87 e6       	ldi	r24, 0x67	; 103
  8e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  92:	08 95       	ret

00000094 <main>:
void usart_init ();
void usart_send (unsigned char ch);

int main (void)
{
	usart_init ();
  94:	0e 94 40 00 	call	0x80	; 0x80 <usart_init>

	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
  98:	85 e4       	ldi	r24, 0x45	; 69
  9a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|    // AVcc - external cap at AREF
	(0<<ADLAR)|    // ADC Left Adjust Result
	(1<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC4 (PC5 PIN28)
	(1<<MUX0);
	ADCSRA = (1<<ADEN)|    // ADC ENable
  9e:	85 e8       	ldi	r24, 0x85	; 133
  a0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(1<<ADPS2)|    // ADC Prescaler Select Bits
	(0<<ADPS1)|
	(1<<ADPS0);

	
	TCCR1B |= (1 << CS12 | (1 << CS10)) ;   // Used to set prescaler of 1024
  a4:	e1 e8       	ldi	r30, 0x81	; 129
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	85 60       	ori	r24, 0x05	; 5
  ac:	80 83       	st	Z, r24
	TIMSK1 = (1 << TOIE1);                  // TOIE1 will be set high and enable overflow
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TCNT1 = 49911;                          // Set to count from 49911 to count up to 65535 to achieve 1 second
  b4:	87 ef       	ldi	r24, 0xF7	; 247
  b6:	92 ec       	ldi	r25, 0xC2	; 194
  b8:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  bc:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	sei();                                  // Declare global interrupt
  c0:	78 94       	sei
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <main+0x2e>

000000c4 <usart_send>:
	UBRR0L = F_CPU/16/BAUD_RATE-1;
}

void usart_send (unsigned char ch)
{
	while (! (UCSR0A & (1<<UDRE0)));  //wait until UDR0 is empty
  c4:	e0 ec       	ldi	r30, 0xC0	; 192
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	90 81       	ld	r25, Z
  ca:	95 ff       	sbrs	r25, 5
  cc:	fd cf       	rjmp	.-6      	; 0xc8 <usart_send+0x4>
	UDR0 = ch;       //transmit ch
  ce:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  d2:	08 95       	ret

000000d4 <__vector_13>:
		// Infinite loop
	}
}

ISR(TIMER1_OVF_vect)
{
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	2f 93       	push	r18
  e0:	3f 93       	push	r19
  e2:	4f 93       	push	r20
  e4:	5f 93       	push	r21
  e6:	6f 93       	push	r22
  e8:	7f 93       	push	r23
  ea:	8f 93       	push	r24
  ec:	9f 93       	push	r25
  ee:	af 93       	push	r26
  f0:	bf 93       	push	r27
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	ef 93       	push	r30
  f8:	ff 93       	push	r31
	ADCSRA|=(1<<ADSC); //start conversion
  fa:	ea e7       	ldi	r30, 0x7A	; 122
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	80 64       	ori	r24, 0x40	; 64
 102:	80 83       	st	Z, r24
	while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
 104:	80 81       	ld	r24, Z
 106:	84 ff       	sbrs	r24, 4
 108:	fd cf       	rjmp	.-6      	; 0x104 <__vector_13+0x30>

	ADCSRA |= (1<<ADIF);
 10a:	ea e7       	ldi	r30, 0x7A	; 122
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	80 61       	ori	r24, 0x10	; 16
 112:	80 83       	st	Z, r24

	int a = ADCL;
 114:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	a = a | (ADCH<<8);
 118:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	a = (a/1024.0) * 5000/10;
 11c:	70 e0       	ldi	r23, 0x00	; 0
 11e:	78 2b       	or	r23, r24
 120:	07 2e       	mov	r0, r23
 122:	00 0c       	add	r0, r0
 124:	88 0b       	sbc	r24, r24
 126:	99 0b       	sbc	r25, r25
 128:	0e 94 88 01 	call	0x310	; 0x310 <__floatsisf>
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	40 e8       	ldi	r20, 0x80	; 128
 132:	5a e3       	ldi	r21, 0x3A	; 58
 134:	0e 94 14 02 	call	0x428	; 0x428 <__mulsf3>
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	30 e4       	ldi	r19, 0x40	; 64
 13c:	4c e9       	ldi	r20, 0x9C	; 156
 13e:	55 e4       	ldi	r21, 0x45	; 69
 140:	0e 94 14 02 	call	0x428	; 0x428 <__mulsf3>
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	40 e2       	ldi	r20, 0x20	; 32
 14a:	51 e4       	ldi	r21, 0x41	; 65
 14c:	0e 94 de 00 	call	0x1bc	; 0x1bc <__divsf3>
 150:	0e 94 50 01 	call	0x2a0	; 0x2a0 <__fixsfsi>
	usart_send((a/100)+'0');
 154:	cb 01       	movw	r24, r22
 156:	64 e6       	ldi	r22, 0x64	; 100
 158:	70 e0       	ldi	r23, 0x00	; 0
 15a:	0e 94 81 02 	call	0x502	; 0x502 <__divmodhi4>
 15e:	ec 01       	movw	r28, r24
 160:	80 e3       	ldi	r24, 0x30	; 48
 162:	86 0f       	add	r24, r22
 164:	0e 94 62 00 	call	0xc4	; 0xc4 <usart_send>
	a = a % 100;
	usart_send((a/10)+'0');
 168:	ce 01       	movw	r24, r28
 16a:	6a e0       	ldi	r22, 0x0A	; 10
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	0e 94 81 02 	call	0x502	; 0x502 <__divmodhi4>
 172:	c8 2f       	mov	r28, r24
 174:	80 e3       	ldi	r24, 0x30	; 48
 176:	86 0f       	add	r24, r22
 178:	0e 94 62 00 	call	0xc4	; 0xc4 <usart_send>
	a = a % 10;
	usart_send((a)+'0');
 17c:	80 e3       	ldi	r24, 0x30	; 48
 17e:	8c 0f       	add	r24, r28
 180:	0e 94 62 00 	call	0xc4	; 0xc4 <usart_send>
	usart_send('\r');
 184:	8d e0       	ldi	r24, 0x0D	; 13
 186:	0e 94 62 00 	call	0xc4	; 0xc4 <usart_send>

	TCNT1 = 49911;              // Reset TCNT value for loop
 18a:	87 ef       	ldi	r24, 0xF7	; 247
 18c:	92 ec       	ldi	r25, 0xC2	; 194
 18e:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 192:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 196:	ff 91       	pop	r31
 198:	ef 91       	pop	r30
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	bf 91       	pop	r27
 1a0:	af 91       	pop	r26
 1a2:	9f 91       	pop	r25
 1a4:	8f 91       	pop	r24
 1a6:	7f 91       	pop	r23
 1a8:	6f 91       	pop	r22
 1aa:	5f 91       	pop	r21
 1ac:	4f 91       	pop	r20
 1ae:	3f 91       	pop	r19
 1b0:	2f 91       	pop	r18
 1b2:	0f 90       	pop	r0
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	0f 90       	pop	r0
 1b8:	1f 90       	pop	r1
 1ba:	18 95       	reti

000001bc <__divsf3>:
 1bc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <__divsf3x>
 1c0:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_round>
 1c4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fp_pscB>
 1c8:	58 f0       	brcs	.+22     	; 0x1e0 <__divsf3+0x24>
 1ca:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_pscA>
 1ce:	40 f0       	brcs	.+16     	; 0x1e0 <__divsf3+0x24>
 1d0:	29 f4       	brne	.+10     	; 0x1dc <__divsf3+0x20>
 1d2:	5f 3f       	cpi	r21, 0xFF	; 255
 1d4:	29 f0       	breq	.+10     	; 0x1e0 <__divsf3+0x24>
 1d6:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_inf>
 1da:	51 11       	cpse	r21, r1
 1dc:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_szero>
 1e0:	0c 94 c9 01 	jmp	0x392	; 0x392 <__fp_nan>

000001e4 <__divsf3x>:
 1e4:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fp_split3>
 1e8:	68 f3       	brcs	.-38     	; 0x1c4 <__divsf3+0x8>

000001ea <__divsf3_pse>:
 1ea:	99 23       	and	r25, r25
 1ec:	b1 f3       	breq	.-20     	; 0x1da <__divsf3+0x1e>
 1ee:	55 23       	and	r21, r21
 1f0:	91 f3       	breq	.-28     	; 0x1d6 <__divsf3+0x1a>
 1f2:	95 1b       	sub	r25, r21
 1f4:	55 0b       	sbc	r21, r21
 1f6:	bb 27       	eor	r27, r27
 1f8:	aa 27       	eor	r26, r26
 1fa:	62 17       	cp	r22, r18
 1fc:	73 07       	cpc	r23, r19
 1fe:	84 07       	cpc	r24, r20
 200:	38 f0       	brcs	.+14     	; 0x210 <__divsf3_pse+0x26>
 202:	9f 5f       	subi	r25, 0xFF	; 255
 204:	5f 4f       	sbci	r21, 0xFF	; 255
 206:	22 0f       	add	r18, r18
 208:	33 1f       	adc	r19, r19
 20a:	44 1f       	adc	r20, r20
 20c:	aa 1f       	adc	r26, r26
 20e:	a9 f3       	breq	.-22     	; 0x1fa <__divsf3_pse+0x10>
 210:	35 d0       	rcall	.+106    	; 0x27c <__divsf3_pse+0x92>
 212:	0e 2e       	mov	r0, r30
 214:	3a f0       	brmi	.+14     	; 0x224 <__divsf3_pse+0x3a>
 216:	e0 e8       	ldi	r30, 0x80	; 128
 218:	32 d0       	rcall	.+100    	; 0x27e <__divsf3_pse+0x94>
 21a:	91 50       	subi	r25, 0x01	; 1
 21c:	50 40       	sbci	r21, 0x00	; 0
 21e:	e6 95       	lsr	r30
 220:	00 1c       	adc	r0, r0
 222:	ca f7       	brpl	.-14     	; 0x216 <__divsf3_pse+0x2c>
 224:	2b d0       	rcall	.+86     	; 0x27c <__divsf3_pse+0x92>
 226:	fe 2f       	mov	r31, r30
 228:	29 d0       	rcall	.+82     	; 0x27c <__divsf3_pse+0x92>
 22a:	66 0f       	add	r22, r22
 22c:	77 1f       	adc	r23, r23
 22e:	88 1f       	adc	r24, r24
 230:	bb 1f       	adc	r27, r27
 232:	26 17       	cp	r18, r22
 234:	37 07       	cpc	r19, r23
 236:	48 07       	cpc	r20, r24
 238:	ab 07       	cpc	r26, r27
 23a:	b0 e8       	ldi	r27, 0x80	; 128
 23c:	09 f0       	breq	.+2      	; 0x240 <__divsf3_pse+0x56>
 23e:	bb 0b       	sbc	r27, r27
 240:	80 2d       	mov	r24, r0
 242:	bf 01       	movw	r22, r30
 244:	ff 27       	eor	r31, r31
 246:	93 58       	subi	r25, 0x83	; 131
 248:	5f 4f       	sbci	r21, 0xFF	; 255
 24a:	3a f0       	brmi	.+14     	; 0x25a <__divsf3_pse+0x70>
 24c:	9e 3f       	cpi	r25, 0xFE	; 254
 24e:	51 05       	cpc	r21, r1
 250:	78 f0       	brcs	.+30     	; 0x270 <__divsf3_pse+0x86>
 252:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_inf>
 256:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_szero>
 25a:	5f 3f       	cpi	r21, 0xFF	; 255
 25c:	e4 f3       	brlt	.-8      	; 0x256 <__divsf3_pse+0x6c>
 25e:	98 3e       	cpi	r25, 0xE8	; 232
 260:	d4 f3       	brlt	.-12     	; 0x256 <__divsf3_pse+0x6c>
 262:	86 95       	lsr	r24
 264:	77 95       	ror	r23
 266:	67 95       	ror	r22
 268:	b7 95       	ror	r27
 26a:	f7 95       	ror	r31
 26c:	9f 5f       	subi	r25, 0xFF	; 255
 26e:	c9 f7       	brne	.-14     	; 0x262 <__divsf3_pse+0x78>
 270:	88 0f       	add	r24, r24
 272:	91 1d       	adc	r25, r1
 274:	96 95       	lsr	r25
 276:	87 95       	ror	r24
 278:	97 f9       	bld	r25, 7
 27a:	08 95       	ret
 27c:	e1 e0       	ldi	r30, 0x01	; 1
 27e:	66 0f       	add	r22, r22
 280:	77 1f       	adc	r23, r23
 282:	88 1f       	adc	r24, r24
 284:	bb 1f       	adc	r27, r27
 286:	62 17       	cp	r22, r18
 288:	73 07       	cpc	r23, r19
 28a:	84 07       	cpc	r24, r20
 28c:	ba 07       	cpc	r27, r26
 28e:	20 f0       	brcs	.+8      	; 0x298 <__divsf3_pse+0xae>
 290:	62 1b       	sub	r22, r18
 292:	73 0b       	sbc	r23, r19
 294:	84 0b       	sbc	r24, r20
 296:	ba 0b       	sbc	r27, r26
 298:	ee 1f       	adc	r30, r30
 29a:	88 f7       	brcc	.-30     	; 0x27e <__divsf3_pse+0x94>
 29c:	e0 95       	com	r30
 29e:	08 95       	ret

000002a0 <__fixsfsi>:
 2a0:	0e 94 57 01 	call	0x2ae	; 0x2ae <__fixunssfsi>
 2a4:	68 94       	set
 2a6:	b1 11       	cpse	r27, r1
 2a8:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_szero>
 2ac:	08 95       	ret

000002ae <__fixunssfsi>:
 2ae:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__fp_splitA>
 2b2:	88 f0       	brcs	.+34     	; 0x2d6 <__fixunssfsi+0x28>
 2b4:	9f 57       	subi	r25, 0x7F	; 127
 2b6:	98 f0       	brcs	.+38     	; 0x2de <__fixunssfsi+0x30>
 2b8:	b9 2f       	mov	r27, r25
 2ba:	99 27       	eor	r25, r25
 2bc:	b7 51       	subi	r27, 0x17	; 23
 2be:	b0 f0       	brcs	.+44     	; 0x2ec <__fixunssfsi+0x3e>
 2c0:	e1 f0       	breq	.+56     	; 0x2fa <__fixunssfsi+0x4c>
 2c2:	66 0f       	add	r22, r22
 2c4:	77 1f       	adc	r23, r23
 2c6:	88 1f       	adc	r24, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	1a f0       	brmi	.+6      	; 0x2d2 <__fixunssfsi+0x24>
 2cc:	ba 95       	dec	r27
 2ce:	c9 f7       	brne	.-14     	; 0x2c2 <__fixunssfsi+0x14>
 2d0:	14 c0       	rjmp	.+40     	; 0x2fa <__fixunssfsi+0x4c>
 2d2:	b1 30       	cpi	r27, 0x01	; 1
 2d4:	91 f0       	breq	.+36     	; 0x2fa <__fixunssfsi+0x4c>
 2d6:	0e 94 0d 02 	call	0x41a	; 0x41a <__fp_zero>
 2da:	b1 e0       	ldi	r27, 0x01	; 1
 2dc:	08 95       	ret
 2de:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__fp_zero>
 2e2:	67 2f       	mov	r22, r23
 2e4:	78 2f       	mov	r23, r24
 2e6:	88 27       	eor	r24, r24
 2e8:	b8 5f       	subi	r27, 0xF8	; 248
 2ea:	39 f0       	breq	.+14     	; 0x2fa <__fixunssfsi+0x4c>
 2ec:	b9 3f       	cpi	r27, 0xF9	; 249
 2ee:	cc f3       	brlt	.-14     	; 0x2e2 <__fixunssfsi+0x34>
 2f0:	86 95       	lsr	r24
 2f2:	77 95       	ror	r23
 2f4:	67 95       	ror	r22
 2f6:	b3 95       	inc	r27
 2f8:	d9 f7       	brne	.-10     	; 0x2f0 <__fixunssfsi+0x42>
 2fa:	3e f4       	brtc	.+14     	; 0x30a <__fixunssfsi+0x5c>
 2fc:	90 95       	com	r25
 2fe:	80 95       	com	r24
 300:	70 95       	com	r23
 302:	61 95       	neg	r22
 304:	7f 4f       	sbci	r23, 0xFF	; 255
 306:	8f 4f       	sbci	r24, 0xFF	; 255
 308:	9f 4f       	sbci	r25, 0xFF	; 255
 30a:	08 95       	ret

0000030c <__floatunsisf>:
 30c:	e8 94       	clt
 30e:	09 c0       	rjmp	.+18     	; 0x322 <__floatsisf+0x12>

00000310 <__floatsisf>:
 310:	97 fb       	bst	r25, 7
 312:	3e f4       	brtc	.+14     	; 0x322 <__floatsisf+0x12>
 314:	90 95       	com	r25
 316:	80 95       	com	r24
 318:	70 95       	com	r23
 31a:	61 95       	neg	r22
 31c:	7f 4f       	sbci	r23, 0xFF	; 255
 31e:	8f 4f       	sbci	r24, 0xFF	; 255
 320:	9f 4f       	sbci	r25, 0xFF	; 255
 322:	99 23       	and	r25, r25
 324:	a9 f0       	breq	.+42     	; 0x350 <__floatsisf+0x40>
 326:	f9 2f       	mov	r31, r25
 328:	96 e9       	ldi	r25, 0x96	; 150
 32a:	bb 27       	eor	r27, r27
 32c:	93 95       	inc	r25
 32e:	f6 95       	lsr	r31
 330:	87 95       	ror	r24
 332:	77 95       	ror	r23
 334:	67 95       	ror	r22
 336:	b7 95       	ror	r27
 338:	f1 11       	cpse	r31, r1
 33a:	f8 cf       	rjmp	.-16     	; 0x32c <__floatsisf+0x1c>
 33c:	fa f4       	brpl	.+62     	; 0x37c <__floatsisf+0x6c>
 33e:	bb 0f       	add	r27, r27
 340:	11 f4       	brne	.+4      	; 0x346 <__floatsisf+0x36>
 342:	60 ff       	sbrs	r22, 0
 344:	1b c0       	rjmp	.+54     	; 0x37c <__floatsisf+0x6c>
 346:	6f 5f       	subi	r22, 0xFF	; 255
 348:	7f 4f       	sbci	r23, 0xFF	; 255
 34a:	8f 4f       	sbci	r24, 0xFF	; 255
 34c:	9f 4f       	sbci	r25, 0xFF	; 255
 34e:	16 c0       	rjmp	.+44     	; 0x37c <__floatsisf+0x6c>
 350:	88 23       	and	r24, r24
 352:	11 f0       	breq	.+4      	; 0x358 <__floatsisf+0x48>
 354:	96 e9       	ldi	r25, 0x96	; 150
 356:	11 c0       	rjmp	.+34     	; 0x37a <__floatsisf+0x6a>
 358:	77 23       	and	r23, r23
 35a:	21 f0       	breq	.+8      	; 0x364 <__floatsisf+0x54>
 35c:	9e e8       	ldi	r25, 0x8E	; 142
 35e:	87 2f       	mov	r24, r23
 360:	76 2f       	mov	r23, r22
 362:	05 c0       	rjmp	.+10     	; 0x36e <__floatsisf+0x5e>
 364:	66 23       	and	r22, r22
 366:	71 f0       	breq	.+28     	; 0x384 <__floatsisf+0x74>
 368:	96 e8       	ldi	r25, 0x86	; 134
 36a:	86 2f       	mov	r24, r22
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	2a f0       	brmi	.+10     	; 0x37c <__floatsisf+0x6c>
 372:	9a 95       	dec	r25
 374:	66 0f       	add	r22, r22
 376:	77 1f       	adc	r23, r23
 378:	88 1f       	adc	r24, r24
 37a:	da f7       	brpl	.-10     	; 0x372 <__floatsisf+0x62>
 37c:	88 0f       	add	r24, r24
 37e:	96 95       	lsr	r25
 380:	87 95       	ror	r24
 382:	97 f9       	bld	r25, 7
 384:	08 95       	ret

00000386 <__fp_inf>:
 386:	97 f9       	bld	r25, 7
 388:	9f 67       	ori	r25, 0x7F	; 127
 38a:	80 e8       	ldi	r24, 0x80	; 128
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	08 95       	ret

00000392 <__fp_nan>:
 392:	9f ef       	ldi	r25, 0xFF	; 255
 394:	80 ec       	ldi	r24, 0xC0	; 192
 396:	08 95       	ret

00000398 <__fp_pscA>:
 398:	00 24       	eor	r0, r0
 39a:	0a 94       	dec	r0
 39c:	16 16       	cp	r1, r22
 39e:	17 06       	cpc	r1, r23
 3a0:	18 06       	cpc	r1, r24
 3a2:	09 06       	cpc	r0, r25
 3a4:	08 95       	ret

000003a6 <__fp_pscB>:
 3a6:	00 24       	eor	r0, r0
 3a8:	0a 94       	dec	r0
 3aa:	12 16       	cp	r1, r18
 3ac:	13 06       	cpc	r1, r19
 3ae:	14 06       	cpc	r1, r20
 3b0:	05 06       	cpc	r0, r21
 3b2:	08 95       	ret

000003b4 <__fp_round>:
 3b4:	09 2e       	mov	r0, r25
 3b6:	03 94       	inc	r0
 3b8:	00 0c       	add	r0, r0
 3ba:	11 f4       	brne	.+4      	; 0x3c0 <__fp_round+0xc>
 3bc:	88 23       	and	r24, r24
 3be:	52 f0       	brmi	.+20     	; 0x3d4 <__fp_round+0x20>
 3c0:	bb 0f       	add	r27, r27
 3c2:	40 f4       	brcc	.+16     	; 0x3d4 <__fp_round+0x20>
 3c4:	bf 2b       	or	r27, r31
 3c6:	11 f4       	brne	.+4      	; 0x3cc <__fp_round+0x18>
 3c8:	60 ff       	sbrs	r22, 0
 3ca:	04 c0       	rjmp	.+8      	; 0x3d4 <__fp_round+0x20>
 3cc:	6f 5f       	subi	r22, 0xFF	; 255
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	8f 4f       	sbci	r24, 0xFF	; 255
 3d2:	9f 4f       	sbci	r25, 0xFF	; 255
 3d4:	08 95       	ret

000003d6 <__fp_split3>:
 3d6:	57 fd       	sbrc	r21, 7
 3d8:	90 58       	subi	r25, 0x80	; 128
 3da:	44 0f       	add	r20, r20
 3dc:	55 1f       	adc	r21, r21
 3de:	59 f0       	breq	.+22     	; 0x3f6 <__fp_splitA+0x10>
 3e0:	5f 3f       	cpi	r21, 0xFF	; 255
 3e2:	71 f0       	breq	.+28     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e4:	47 95       	ror	r20

000003e6 <__fp_splitA>:
 3e6:	88 0f       	add	r24, r24
 3e8:	97 fb       	bst	r25, 7
 3ea:	99 1f       	adc	r25, r25
 3ec:	61 f0       	breq	.+24     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ee:	9f 3f       	cpi	r25, 0xFF	; 255
 3f0:	79 f0       	breq	.+30     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f2:	87 95       	ror	r24
 3f4:	08 95       	ret
 3f6:	12 16       	cp	r1, r18
 3f8:	13 06       	cpc	r1, r19
 3fa:	14 06       	cpc	r1, r20
 3fc:	55 1f       	adc	r21, r21
 3fe:	f2 cf       	rjmp	.-28     	; 0x3e4 <__fp_split3+0xe>
 400:	46 95       	lsr	r20
 402:	f1 df       	rcall	.-30     	; 0x3e6 <__fp_splitA>
 404:	08 c0       	rjmp	.+16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 406:	16 16       	cp	r1, r22
 408:	17 06       	cpc	r1, r23
 40a:	18 06       	cpc	r1, r24
 40c:	99 1f       	adc	r25, r25
 40e:	f1 cf       	rjmp	.-30     	; 0x3f2 <__fp_splitA+0xc>
 410:	86 95       	lsr	r24
 412:	71 05       	cpc	r23, r1
 414:	61 05       	cpc	r22, r1
 416:	08 94       	sec
 418:	08 95       	ret

0000041a <__fp_zero>:
 41a:	e8 94       	clt

0000041c <__fp_szero>:
 41c:	bb 27       	eor	r27, r27
 41e:	66 27       	eor	r22, r22
 420:	77 27       	eor	r23, r23
 422:	cb 01       	movw	r24, r22
 424:	97 f9       	bld	r25, 7
 426:	08 95       	ret

00000428 <__mulsf3>:
 428:	0e 94 27 02 	call	0x44e	; 0x44e <__mulsf3x>
 42c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_round>
 430:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_pscA>
 434:	38 f0       	brcs	.+14     	; 0x444 <__mulsf3+0x1c>
 436:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fp_pscB>
 43a:	20 f0       	brcs	.+8      	; 0x444 <__mulsf3+0x1c>
 43c:	95 23       	and	r25, r21
 43e:	11 f0       	breq	.+4      	; 0x444 <__mulsf3+0x1c>
 440:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_inf>
 444:	0c 94 c9 01 	jmp	0x392	; 0x392 <__fp_nan>
 448:	11 24       	eor	r1, r1
 44a:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_szero>

0000044e <__mulsf3x>:
 44e:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fp_split3>
 452:	70 f3       	brcs	.-36     	; 0x430 <__mulsf3+0x8>

00000454 <__mulsf3_pse>:
 454:	95 9f       	mul	r25, r21
 456:	c1 f3       	breq	.-16     	; 0x448 <__mulsf3+0x20>
 458:	95 0f       	add	r25, r21
 45a:	50 e0       	ldi	r21, 0x00	; 0
 45c:	55 1f       	adc	r21, r21
 45e:	62 9f       	mul	r22, r18
 460:	f0 01       	movw	r30, r0
 462:	72 9f       	mul	r23, r18
 464:	bb 27       	eor	r27, r27
 466:	f0 0d       	add	r31, r0
 468:	b1 1d       	adc	r27, r1
 46a:	63 9f       	mul	r22, r19
 46c:	aa 27       	eor	r26, r26
 46e:	f0 0d       	add	r31, r0
 470:	b1 1d       	adc	r27, r1
 472:	aa 1f       	adc	r26, r26
 474:	64 9f       	mul	r22, r20
 476:	66 27       	eor	r22, r22
 478:	b0 0d       	add	r27, r0
 47a:	a1 1d       	adc	r26, r1
 47c:	66 1f       	adc	r22, r22
 47e:	82 9f       	mul	r24, r18
 480:	22 27       	eor	r18, r18
 482:	b0 0d       	add	r27, r0
 484:	a1 1d       	adc	r26, r1
 486:	62 1f       	adc	r22, r18
 488:	73 9f       	mul	r23, r19
 48a:	b0 0d       	add	r27, r0
 48c:	a1 1d       	adc	r26, r1
 48e:	62 1f       	adc	r22, r18
 490:	83 9f       	mul	r24, r19
 492:	a0 0d       	add	r26, r0
 494:	61 1d       	adc	r22, r1
 496:	22 1f       	adc	r18, r18
 498:	74 9f       	mul	r23, r20
 49a:	33 27       	eor	r19, r19
 49c:	a0 0d       	add	r26, r0
 49e:	61 1d       	adc	r22, r1
 4a0:	23 1f       	adc	r18, r19
 4a2:	84 9f       	mul	r24, r20
 4a4:	60 0d       	add	r22, r0
 4a6:	21 1d       	adc	r18, r1
 4a8:	82 2f       	mov	r24, r18
 4aa:	76 2f       	mov	r23, r22
 4ac:	6a 2f       	mov	r22, r26
 4ae:	11 24       	eor	r1, r1
 4b0:	9f 57       	subi	r25, 0x7F	; 127
 4b2:	50 40       	sbci	r21, 0x00	; 0
 4b4:	9a f0       	brmi	.+38     	; 0x4dc <__mulsf3_pse+0x88>
 4b6:	f1 f0       	breq	.+60     	; 0x4f4 <__mulsf3_pse+0xa0>
 4b8:	88 23       	and	r24, r24
 4ba:	4a f0       	brmi	.+18     	; 0x4ce <__mulsf3_pse+0x7a>
 4bc:	ee 0f       	add	r30, r30
 4be:	ff 1f       	adc	r31, r31
 4c0:	bb 1f       	adc	r27, r27
 4c2:	66 1f       	adc	r22, r22
 4c4:	77 1f       	adc	r23, r23
 4c6:	88 1f       	adc	r24, r24
 4c8:	91 50       	subi	r25, 0x01	; 1
 4ca:	50 40       	sbci	r21, 0x00	; 0
 4cc:	a9 f7       	brne	.-22     	; 0x4b8 <__mulsf3_pse+0x64>
 4ce:	9e 3f       	cpi	r25, 0xFE	; 254
 4d0:	51 05       	cpc	r21, r1
 4d2:	80 f0       	brcs	.+32     	; 0x4f4 <__mulsf3_pse+0xa0>
 4d4:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_inf>
 4d8:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_szero>
 4dc:	5f 3f       	cpi	r21, 0xFF	; 255
 4de:	e4 f3       	brlt	.-8      	; 0x4d8 <__mulsf3_pse+0x84>
 4e0:	98 3e       	cpi	r25, 0xE8	; 232
 4e2:	d4 f3       	brlt	.-12     	; 0x4d8 <__mulsf3_pse+0x84>
 4e4:	86 95       	lsr	r24
 4e6:	77 95       	ror	r23
 4e8:	67 95       	ror	r22
 4ea:	b7 95       	ror	r27
 4ec:	f7 95       	ror	r31
 4ee:	e7 95       	ror	r30
 4f0:	9f 5f       	subi	r25, 0xFF	; 255
 4f2:	c1 f7       	brne	.-16     	; 0x4e4 <__mulsf3_pse+0x90>
 4f4:	fe 2b       	or	r31, r30
 4f6:	88 0f       	add	r24, r24
 4f8:	91 1d       	adc	r25, r1
 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24
 4fe:	97 f9       	bld	r25, 7
 500:	08 95       	ret

00000502 <__divmodhi4>:
 502:	97 fb       	bst	r25, 7
 504:	07 2e       	mov	r0, r23
 506:	16 f4       	brtc	.+4      	; 0x50c <__divmodhi4+0xa>
 508:	00 94       	com	r0
 50a:	07 d0       	rcall	.+14     	; 0x51a <__divmodhi4_neg1>
 50c:	77 fd       	sbrc	r23, 7
 50e:	09 d0       	rcall	.+18     	; 0x522 <__divmodhi4_neg2>
 510:	0e 94 95 02 	call	0x52a	; 0x52a <__udivmodhi4>
 514:	07 fc       	sbrc	r0, 7
 516:	05 d0       	rcall	.+10     	; 0x522 <__divmodhi4_neg2>
 518:	3e f4       	brtc	.+14     	; 0x528 <__divmodhi4_exit>

0000051a <__divmodhi4_neg1>:
 51a:	90 95       	com	r25
 51c:	81 95       	neg	r24
 51e:	9f 4f       	sbci	r25, 0xFF	; 255
 520:	08 95       	ret

00000522 <__divmodhi4_neg2>:
 522:	70 95       	com	r23
 524:	61 95       	neg	r22
 526:	7f 4f       	sbci	r23, 0xFF	; 255

00000528 <__divmodhi4_exit>:
 528:	08 95       	ret

0000052a <__udivmodhi4>:
 52a:	aa 1b       	sub	r26, r26
 52c:	bb 1b       	sub	r27, r27
 52e:	51 e1       	ldi	r21, 0x11	; 17
 530:	07 c0       	rjmp	.+14     	; 0x540 <__udivmodhi4_ep>

00000532 <__udivmodhi4_loop>:
 532:	aa 1f       	adc	r26, r26
 534:	bb 1f       	adc	r27, r27
 536:	a6 17       	cp	r26, r22
 538:	b7 07       	cpc	r27, r23
 53a:	10 f0       	brcs	.+4      	; 0x540 <__udivmodhi4_ep>
 53c:	a6 1b       	sub	r26, r22
 53e:	b7 0b       	sbc	r27, r23

00000540 <__udivmodhi4_ep>:
 540:	88 1f       	adc	r24, r24
 542:	99 1f       	adc	r25, r25
 544:	5a 95       	dec	r21
 546:	a9 f7       	brne	.-22     	; 0x532 <__udivmodhi4_loop>
 548:	80 95       	com	r24
 54a:	90 95       	com	r25
 54c:	bc 01       	movw	r22, r24
 54e:	cd 01       	movw	r24, r26
 550:	08 95       	ret

00000552 <_exit>:
 552:	f8 94       	cli

00000554 <__stop_program>:
 554:	ff cf       	rjmp	.-2      	; 0x554 <__stop_program>
